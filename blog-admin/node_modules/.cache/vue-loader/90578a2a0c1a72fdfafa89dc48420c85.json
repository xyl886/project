{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\src\\views\\listener\\quartz\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\src\\views\\listener\\quartz\\index.vue","mtime":1682347711000},{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689641835446},{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1689641839258},{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689641835446},{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1689641841369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"src/views/listener/quartz","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form v-show=\"showSearch\" ref=\"queryForm\" :model=\"params\" :inline=\"true\" label-width=\"68px\">\n      <el-form-item label=\"任务名称\" prop=\"jobName\">\n        <el-input\n          v-model=\"params.jobName\"\n          placeholder=\"请输入任务名称\"\n          clearable\n          size=\"small\"\n          @keyup.enter.native=\"handleFind\"\n        />\n      </el-form-item>\n      <el-form-item label=\"任务组名\" prop=\"jobGroup\">\n        <el-select v-model=\"params.jobGroup\" placeholder=\"请选择任务组名\" clearable size=\"small\" @change=\"handleFind\">\n          <el-option\n            v-for=\"dict in jobDictList\"\n            :key=\"dict.value\"\n            :label=\"dict.label\"\n            :value=\"dict.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"任务状态\" prop=\"status\">\n        <el-select v-model=\"params.status\" placeholder=\"请选择任务状态\" clearable size=\"small\" @change=\"handleFind\">\n          <el-option\n            v-for=\"dict in jobStatusList\"\n            :key=\"dict.value\"\n            :label=\"dict.label\"\n            :value=\"dict.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleFind\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          v-if=\"canAdd\"\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleCreate\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"info\"\n          icon=\"el-icon-s-operation\"\n          size=\"mini\"\n          @click=\"handleJobLog\"\n        >日志</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          v-if=\"canDeleteBatch\"\n          :disabled=\"!multipleSelection.length\"\n          type=\"danger\"\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          @click=\"handleDelete\"\n        >批量删除</el-button>\n      </el-col>\n      <right-toolbar :show-search.sync=\"showSearch\" @queryTable=\"fetchJobs\" />\n    </el-row>\n\n    <div style=\"margin-top: 5px\">\n      <el-table border style=\"width: 100%\" :data=\"tableData\" @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n        <el-table-column label=\"任务名称\" width=\"160\" align=\"center\" prop=\"jobName\" :show-overflow-tooltip=\"true\" />\n        <el-table-column label=\"任务组名\" align=\"center\" prop=\"jobGroup\">\n          <template slot-scope=\"scope\">\n            <el-tag v-for=\"dict in jobDictList\" v-if=\"dict.value === scope.row.jobGroup\" :type=\"dict.style\">\n              {{ dict.label }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"调用目标字符串\" align=\"center\" prop=\"invokeTarget\" :show-overflow-tooltip=\"true\" />\n        <el-table-column label=\"cron执行表达式\" align=\"center\" prop=\"cronExpression\" :show-overflow-tooltip=\"true\" />\n        <el-table-column label=\"状态\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-switch\n              v-model=\"scope.row.status\"\n              active-value=\"0\"\n              inactive-value=\"1\"\n              @change=\"handleStatusChange(scope)\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"创建者\" prop=\"createBy\" align=\"center\" />\n        <el-table-column label=\"创建时间\" align=\"center\" width=\"160\">\n          <template slot-scope=\"scope\">\n            {{ dataFormat(scope.row.createTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n          <template slot-scope=\"scope\">\n            <el-button v-if=\"canUpdate\" size=\"mini\" type=\"text\" @click=\"handleEdit(scope)\">修改</el-button>\n            <el-button v-if=\"canDel\" size=\"mini\" type=\"text\" @click=\"remove(scope)\">删除</el-button>\n            <el-dropdown v-if=\"canUpdate\" size=\"mini\" @command=\"(command) => handleCommand(command, scope.row)\">\n              <el-button\n                size=\"mini\"\n                type=\"text\"\n                style=\"margin-left: 9px\"\n              >更多</el-button>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item\n                  command=\"handleRun\"\n                  icon=\"el-icon-caret-right\"\n                >执行一次</el-dropdown-item>\n                <el-dropdown-item\n                  command=\"handleView\"\n                  icon=\"el-icon-view\"\n                >任务详细</el-dropdown-item>\n                <el-dropdown-item\n                  command=\"handleJobLog\"\n                  icon=\"el-icon-s-operation\"\n                >调度日志</el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!--分页区域-->\n    <div class=\"pagination-container\" style=\"float: right;margin-bottom: 1.25rem;margin-top: 1.25rem;\">\n      <el-pagination\n        background\n        :current-page=\"params.pageNo\"\n        :page-size=\"params.pageSize\"\n        :page-sizes=\"[10, 20, 30]\"\n        layout=\"total, sizes,prev, pager, next,jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </div>\n\n    <!-- 添加或修改定时任务对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"dialogFormVisible\" width=\"800px\" append-to-body>\n      <el-form ref=\"dataForm\" :model=\"job\" :rules=\"rules\" label-width=\"120px\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务名称\" prop=\"jobName\">\n              <el-input v-model=\"job.jobName\" placeholder=\"请输入任务名称\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务分组\" prop=\"jobGroup\">\n              <el-select v-model=\"job.jobGroup\" placeholder=\"请选择\">\n                <el-option\n                  v-for=\"dict in jobDictList\"\n                  :key=\"dict.value\"\n                  :label=\"dict.label\"\n                  :value=\"dict.value\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item prop=\"invokeTarget\">\n              <span slot=\"label\">\n                调用方法\n                <el-tooltip placement=\"top\">\n                  <div slot=\"content\">\n                    Bean调用示例：blogQuartz.blogParams('blog')\n                    <br>Class类调用示例：com.shiyi.quartz.BlogQuartz.blogParams('blog')\n                    <br>参数说明：支持字符串，布尔类型，长整型，浮点型，整型\n                  </div>\n                  <i class=\"el-icon-question\" />\n                </el-tooltip>\n              </span>\n              <el-input v-model=\"job.invokeTarget\" placeholder=\"请输入调用目标字符串\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"cron表达式\" prop=\"cronExpression\">\n              <el-input v-model=\"job.cronExpression\" placeholder=\"请输入cron执行表达式\">\n                <template slot=\"append\">\n                  <el-button type=\"primary\" @click=\"handleShowCron\">\n                    生成表达式\n                    <i class=\"el-icon-time el-icon--right\" />\n                  </el-button>\n                </template>\n              </el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"错误策略\" prop=\"misfirePolicy\">\n              <el-radio-group v-model=\"job.misfirePolicy\" size=\"small\">\n                <el-radio-button v-for=\"item in jobMisfireList\" :key=\"item.value\" :label=\"item.value\">{{ item.label }}</el-radio-button>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"是否并发\" prop=\"concurrent\">\n              <el-radio-group v-model=\"job.concurrent\" size=\"small\">\n                <el-radio-button label=\"0\">允许</el-radio-button>\n                <el-radio-button label=\"1\">禁止</el-radio-button>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"状态\">\n              <el-radio-group v-model=\"job.status\">\n                <el-radio\n                  v-for=\"dict in jobStatusList\"\n                  :key=\"dict.value\"\n                  :label=\"dict.value\"\n                >{{ dict.label }}</el-radio>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"Cron表达式生成器\" :visible.sync=\"openCron\" append-to-body destroy-on-close class=\"scrollbar\">\n      <crontab :expression=\"expression\" @hide=\"openCron=false\" @fill=\"crontabFill\" />\n    </el-dialog>\n\n    <!-- 任务日志详细 -->\n    <el-dialog title=\"任务详细\" :visible.sync=\"openView\" width=\"700px\" append-to-body>\n      <el-form ref=\"form\" :model=\"job\" label-width=\"120px\" size=\"mini\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务编号：\">{{ job.jobId }}</el-form-item>\n            <el-form-item label=\"任务名称：\">{{ job.jobName }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item v-for=\"item in jobDictList\" v-if=\"item.value === job.jobGroup\" label=\"任务分组：\">\n              {{ item.label }}\n            </el-form-item>\n            <el-form-item label=\"创建时间：\">{{ dataFormat(job.createTime) }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"cron表达式：\">{{ job.cronExpression }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"下次执行时间：\">{{ dataFormat(job.nextValidTime) }}</el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"调用目标方法：\">{{ job.invokeTarget }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务状态：\">\n              <div v-for=\"item in jobStatusList\" v-if=\"job.status === item.value\">{{ item.label }}</div>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"是否并发：\">\n              <div v-if=\"job.concurrent === '0'\">允许</div>\n              <div v-else-if=\"job.concurrent === '1'\">禁止</div>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"执行策略：\">\n              <div v-for=\"item in jobMisfireList\" v-if=\"job.misfirePolicy === item.value\">\n                {{ item.label }}\n              </div>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"openView = false\">关 闭</el-button>\n      </div>\n    </el-dialog>\n  </div>\n\n</template>\n<script>\nimport { fetchList, add, update, info, remove, change, run, deleteBatch } from '@/api/quartz'\nimport { getDataByDictType } from '@/api/dictData'\nimport Crontab from '@/components/Crontab'\nimport { parseTime } from '@/utils'\nimport { hasAuth } from '@/utils/auth'\nimport { mapGetters } from 'vuex'\nexport default {\n  components: { Crontab },\n  data() {\n    return {\n      // 加载层信息\n      loading: [],\n      tableData: [],\n      dialogFormVisible: false,\n      openView: false,\n      showSearch: true,\n      jobDictList: [],\n      jobStatusList: [],\n      jobMisfireList: [],\n      jobDictDefaultValue: null,\n      jobStatusDefaultValue: null,\n      jobMisfireDefaultValue: null,\n      isEditForm: 0,\n      // 是否显示Cron表达式弹出层\n      openCron: false,\n      // 传入的表达式\n      expression: '',\n      total: null,\n      multipleSelection: [],\n      title: null,\n      job: {},\n      params: {\n        jobName: null,\n        jobGroup: null,\n        status: null,\n        pageNo: 1,\n        pageSize: 10\n      },\n      rules:\n        {\n          jobName: [\n            { required: true, message: '任务名称不能为空', trigger: 'blur' }\n          ],\n          invokeTarget: [\n            { required: true, message: '调用目标字符串不能为空', trigger: 'blur' }\n          ],\n          cronExpression: [\n            { required: true, message: 'cron执行表达式不能为空', trigger: 'blur' }\n          ]\n        }\n    }\n  },\n  created() {\n    this.openLoading()\n    this.getDictList()\n    this.fetchJobs()\n  },\n  computed: {\n    ...mapGetters([\n      'pres'\n    ]),\n    canAdd: function() {\n      return hasAuth(this.pres, '/system/job/add')\n    },\n    canDel: function() {\n      return hasAuth(this.pres, '/system/job/delete')\n    },\n    canDeleteBatch: function() {\n      return hasAuth(this.pres, '/system/job/deleteBatch')\n    },\n    canUpdate: function() {\n      return hasAuth(this.pres, '/system/job/update')\n    }\n  },\n  methods: {\n    getDictList: function() {\n      const dictTypeList = ['sys_job_group', 'sys_job_status', 'sys_job_misfire']\n      getDataByDictType(dictTypeList).then(response => {\n        const dictMap = response.data\n        this.jobDictList = dictMap.sys_job_group.list\n        this.jobStatusList = dictMap.sys_job_status.list\n        this.jobMisfireList = dictMap.sys_job_misfire.list\n        this.jobDictDefaultValue = dictMap.sys_job_group.defaultValue\n        this.jobStatusDefaultValue = dictMap.sys_job_status.defaultValue\n        this.jobMisfireDefaultValue = dictMap.sys_job_misfire.defaultValue\n      })\n    },\n    fetchJobs: function() {\n      fetchList(this.params).then(res => {\n        this.tableData = res.data.records\n        this.total = res.data.total\n        this.loading.close()\n      }).catch(err => {\n        console.log(err)\n      })\n    },\n    submit: function() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          if (this.isEditForm) {\n            update(this.job).then(res => {\n              this.$message.success('OK')\n              this.fetchJobs()\n              this.closeDialogForm()\n            }).catch(err => {\n              console.error(err)\n            })\n          } else {\n            add(this.job).then(res => {\n              this.$message.success('OK')\n              this.fetchJobs()\n              this.closeDialogForm()\n            }).catch(err => {\n              console.error(err)\n            })\n          }\n        } else {\n          console.error('no submit')\n        }\n      })\n    },\n    remove: function(scope) {\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        remove(scope.row.jobId).then(res => {\n          this.$message.success('OK')\n          this.fetchJobs()\n        }).catch(err => {\n          console.error(err)\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消删除'\n        })\n      })\n    },\n    handleCreate: function() {\n      this.isEditForm = 0\n      this.job = this.getFormObject()\n      this.title = '新增任务'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    handleEdit: function(scope) {\n      this.title = '修改任务'\n      info(scope.row.jobId).then(res => {\n        this.job = res.data\n        this.isEditForm = 1\n        this.dialogFormVisible = true\n        this.$nextTick(() => {\n          this.$refs['dataForm'].clearValidate()\n        })\n      })\n    },\n    getFormObject: function() {\n      return {\n        jobName: '',\n        jobGroup: this.jobDictDefaultValue,\n        invokeTarget: '',\n        cronExpression: '',\n        misfirePolicy: this.jobMisfireDefaultValue,\n        concurrent: 1,\n        status: this.jobStatusDefaultValue,\n        remark: this.jobStatusDefaultValue\n      }\n    },\n    /** cron表达式按钮操作 */\n    handleShowCron() {\n      this.expression = this.job.cronExpression\n      this.openCron = true\n    },\n    /** 确定后回传值 */\n    crontabFill(value) {\n      this.job.cronExpression = value\n    },\n    resetQuery: function() {\n      this.params.jobName = null\n      this.params.jobGroup = null\n      this.params.status = null\n      this.fetchJobs()\n    },\n    handleFind: function() {\n      this.params.pageNo = 1\n      this.fetchJobs()\n    },\n    // 更多操作触发\n    handleCommand(command, row) {\n      switch (command) {\n        case 'handleRun':\n          this.handleRun(row)\n          break\n        case 'handleView':\n          this.handleView(row)\n          break\n        case 'handleJobLog':\n          this.handleJobLog(row)\n          break\n        default:\n          break\n      }\n    },\n    /* 立即执行一次 */\n    handleRun: function(row) {\n      this.$confirm('确认要立即执行一次\"' + row.jobName + '\"任务吗？').then(function() {\n        return run(row)\n      }).then(() => {\n        this.$message.success('执行成功')\n      }).catch(err => {\n        this.$message.error(err)\n      })\n    },\n    /* 立即执行一次 */\n    handleView: function(row) {\n      info(row.jobId).then(response => {\n        this.job = response.data\n        this.openView = true\n      })\n    },\n    /** 任务日志列表查询 */\n    handleJobLog: function(row) {\n      const jobId = row.jobId || null\n      this.$router.push({ path: '/jobLog', query: { jobId: jobId }})\n    },\n    handleStatusChange: function(scope) {\n      change(scope.row).then(res => {\n        this.$message.success('OK')\n      }).catch(err => {\n        console.error(err)\n      })\n    },\n    handleDelete: function() {\n      if (!this.multipleSelection.length) {\n        this.$message.error('请选择要删除的标签')\n        return false\n      }\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteBatch(this.multipleSelection).then(res => {\n          this.$message.success('OK')\n          this.fetchJobs()\n        }).catch(err => {\n          console.error(err)\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消删除'\n        })\n      })\n    },\n    closeDialogForm: function() {\n      this.tag = {}\n      this.dialogFormVisible = false\n    },\n    handleSizeChange: function(val) {\n      this.params.pageSize = val\n      this.fetchJobs()\n    },\n    handleCurrentChange: function(val) {\n      this.params.pageNo = val\n      this.fetchJobs()\n    },\n    handleSelectionChange: function(val) {\n      this.multipleSelection = val.map(item => item.jobId)\n    },\n    // 打开加载层\n    openLoading() {\n      this.loading = this.$loading({\n        lock: true,\n        text: '正在加载中~',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      })\n    },\n    dataFormat: function(time) {\n      return parseTime(time)\n    }\n  }\n}\n</script>\n"]}]}