{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\src\\views\\system\\user.vue?vue&type=style&index=0&id=15e13bfe&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\src\\views\\system\\user.vue","mtime":1682348248000},{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689641836837},{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689641842815},{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1689641839231},{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689641835446},{"path":"C:\\Users\\Administrator\\Desktop\\product\\blog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1689641841369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkIHsKICBib3JkZXI6IDFweCBkYXNoZWQgI2Q5ZDlkOTsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBvdmVyZmxvdzogaGlkZGVuOwp9Ci5hdmF0YXItdXBsb2FkZXIgLmVsLXVwbG9hZDpob3ZlciB7CiAgYm9yZGVyLWNvbG9yOiAjNDA5RUZGOwp9Ci5hdmF0YXItdXBsb2FkZXItaWNvbiB7CiAgZm9udC1zaXplOiAyOHB4OwogIGNvbG9yOiAjOGM5MzlkOwogIHdpZHRoOiAxNzhweDsKICBoZWlnaHQ6IDE3OHB4OwogIGxpbmUtaGVpZ2h0OiAxNzhweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KLmF2YXRhciB7CiAgd2lkdGg6IDE3OHB4OwogIGhlaWdodDogMTc4cHg7CiAgZGlzcGxheTogYmxvY2s7Cn0K"},{"version":3,"sources":["user.vue"],"names":[],"mappingsfile":"user.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 查询和其他操作 -->\n    <el-form v-show=\"showSearch\" ref=\"form\" :inline=\"true\" :model=\"params\" label-width=\"68px\">\n      <el-form-item label=\"用户名称\">\n        <el-input v-model=\"params.username\" style=\"width: 200px\" size=\"small\" placeholder=\"请输入用户名称\" />\n      </el-form-item>\n      <el-form-item label=\"登录方式\">\n        <el-select\n          v-model=\"params.loginType\"\n          style=\"width: 150px\"\n          size=\"small\"\n          filterable\n          clearable\n          reserve-keyword\n          placeholder=\"请选择登录方式\"\n          @change=\"handleFind\"\n        >\n          <el-option v-for=\"item in dictLoginTypeList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"small\" @click=\"handleFind\">查找</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"small\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <!--        <el-button\n          v-if=\"canAdd\"\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          size=\"small\"\n          @click=\"handleCreate\"\n        >新增\n        </el-button>-->\n      </el-col> <el-col :span=\"1.5\">\n        <el-button\n          v-if=\"canDel\"\n          :disabled=\"!multipleSelection.length\"\n          type=\"danger\"\n          icon=\"el-icon-delete\"\n          size=\"small\"\n          @click=\"handleDelete\"\n        >批量删除\n        </el-button>\n      </el-col>\n      <right-toolbar :show-search.sync=\"showSearch\" @queryTable=\"fetchUser\" />\n    </el-row>\n\n    <div style=\"margin-top: 5px\">\n      <el-table border :data=\"userData\" fit style=\"width: 100%\" @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" align=\"center\" />\n        <el-table-column prop=\"avatar\" align=\"center\" width=\"100\" label=\"头像\">\n          <template slot-scope=\"scope\">\n            <img :src=\"scope.row.avatar\" width=\"60\" height=\"60\">\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"nickname\" width=\"150px\" align=\"center\" label=\"昵称\" />\n        <el-table-column prop=\"loginType\" align=\"center\" label=\"登录方式\">\n          <template slot-scope=\"scope\">\n            <el-tag v-for=\"item in dictLoginTypeList\" v-if=\"scope.row.loginType === parseInt(item.value)\" :type=\"item.style\">\n              {{ item.label }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"用户角色\">\n          <template slot-scope=\"scope\">\n            <el-tag v-for=\"item in roleList\" v-if=\"scope.row.roleId === item.id\">\n              {{ item.name }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"ipAddress\" width=\"130px\" align=\"center\" label=\"登录IP\" />\n        <el-table-column prop=\"ipSource\" width=\"150px\" align=\"center\" label=\"登录地址\" />\n        <el-table-column prop=\"createTime\" align=\"center\" width=\"180\" label=\"创建时间\">\n          <template slot-scope=\"scope\">\n            <span>{{ formatTime(scope.row.createTime) }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" width=\"180\" label=\"最后登录时间\">\n          <template slot-scope=\"scope\">\n            <span>{{ formatTime(scope.row.lastLoginTime) }}</span>\n          </template>\n        </el-table-column>\n        <!--        <el-table-column align=\"center\" label=\"状态\">\n          <template slot-scope=\"scope\">\n            <span>{{statusOptions[scope.row.status]}}</span>\n          </template>\n        </el-table-column>-->\n        <el-table-column align=\"center\" label=\"操作\" width=\"150\" class-name=\"small-padding fixed-width\">\n          <template slot-scope=\"scope\">\n            <el-button v-if=\"canUpdate\" type=\"primary\" size=\"mini\" @click=\"handleUpdate(scope)\">编辑</el-button>\n            <el-button\n              v-if=\"canDel\"\n              size=\"mini\"\n              type=\"danger\"\n              @click=\"handleDelete(scope.row)\"\n            >删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!--分页区域-->\n    <div class=\"pagination-container\" style=\"float: right;margin-bottom: 1.25rem;margin-top: 1.25rem;\">\n      <el-pagination\n        background\n        :current-page=\"params.pageNo\"\n        :page-size=\"params.pageSize\"\n        :page-sizes=\"[10, 20, 30]\"\n        layout=\"total, sizes,prev, pager, next,jumper\"\n        :total=\"total\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </div>\n\n    <el-dialog center :title=\"title\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"form\">\n        <el-form-item prop=\"nickname\" label=\"昵称\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.nickname\" disabled=\"true\" autocomplete=\"off\" />\n        </el-form-item>\n        <el-form-item prop=\"status\" label=\"状态\" :label-width=\"formLabelWidth\">\n          <div>\n            <el-radio v-for=\"(item,index) in statusOptions\" v-model=\"form.status\" :label=\"index\" border>{{ item }}</el-radio>\n          </div>\n        </el-form-item>\n        <el-form-item prop=\"roleId\" label=\"角色\" :label-width=\"formLabelWidth\">\n          <div>\n            <el-radio v-for=\"item in roleList\" v-model=\"form.roleId\" :label=\"item.id\" border>{{ item.name }}</el-radio>\n          </div>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport { fetchUser, remove, create, update, info } from '@/api/user'\nimport { fetchRole } from '@/api/system'\nimport { parseTime } from '@/utils'\nimport { upload } from '@/api/imgUpload'\nimport { mapGetters } from 'vuex'\nimport { hasAuth } from '@/utils/auth'\nimport { getDataByDictType } from '@/api/dictData'\nexport default {\n  data() {\n    return {\n      formLabelWidth: '120px',\n      icon: false, // 控制删除图标的显示\n      img: process.env.VUE_APP_IMG_API,\n      uploadPictureHost: process.env.VUE_APP_BASE_API + '/file/upload',\n      isEditForm: 0,\n      sexColor: ['success', 'warning'],\n      sexOptions: ['男', '女'],\n      statusOptions: ['禁用', '正常'],\n      dialogFormVisible: false,\n      showSearch: true,\n      isFirstPhotoVisible: true, // 图片选择器是否首次显示【用于懒加载】\n      photoVisible: false, // 控制图片选择器的显示\n      photoList: [],\n      fileIds: '',\n      multipleSelection: [],\n      // 加载层信息\n      loading: [],\n      title: '',\n      dictLoginTypeList: [],\n      loginTypeDefaultValue: null,\n      total: 0,\n      files: {},\n      params: {\n        pageNo: 1,\n        pageSize: 10,\n        username: null,\n        loginType: null\n      },\n      roleList: [],\n      form: {},\n      userData: [],\n      rules: {\n        username: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n          { min: 1, max: 20, message: '长度在1到20个字符' }\n        ],\n        nickname: [\n          { required: true, message: '请输入昵称', trigger: 'blur' },\n          { min: 1, max: 20, message: '长度在1到20个字符' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ],\n        status: [\n          { required: true, message: '请选择状态', trigger: 'change' }\n        ],\n        roleId: [\n          { required: true, message: '请选择角色', trigger: 'change' }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'pres'\n    ]),\n    canAdd: function() {\n      return hasAuth(this.pres, '/system/user/create')\n    },\n    canDel: function() {\n      return hasAuth(this.pres, '/system/user/remove')\n    },\n    canUpdate: function() {\n      return hasAuth(this.pres, '/system/user/update')\n    }\n  },\n  created() {\n    this.openLoading()\n    this.getDictList()\n    this.fetchRole()\n    this.fetchUser()\n  },\n  methods: {\n    getDictList: function() {\n      const dictTypes = ['sys_login_method']\n      getDataByDictType(dictTypes).then(response => {\n        const dictMap = response.data\n        this.dictLoginTypeList = dictMap.sys_login_method.list\n        this.loginTypeDefaultValue = dictMap.sys_login_method.defaultValue\n      }).catch(err => {\n        console.error(err)\n      })\n    },\n    fetchUser: function() {\n      fetchUser(this.params).then(res => {\n        this.userData = res.data.records\n        this.total = res.data.total\n        this.loading.close()\n      }).catch(err => {\n        console.error(err)\n      })\n    },\n    fetchRole: function() {\n      fetchRole({ pageNo: 0, pageSize: 10 }).then(res => {\n        this.roleList = res.data.records\n      })\n    },\n    resetQuery: function() {\n      this.params.username = null\n      this.fetchUser()\n    },\n    handleFind: function() {\n      this.params.pageNo = 1\n      this.fetchUser()\n    },\n    handleCreate: function() {\n      this.form = this.getFormObject()\n      this.beforeShow('添加用户', 0)\n    },\n    handleUpdate: function(scope) {\n      info(scope.row.id).then(res => {\n        this.form = res.data\n      })\n      this.beforeShow('修改用户', 1)\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    getFormObject: function() {\n      return {\n        id: null,\n        username: '',\n        password: '',\n        nickname: '',\n        avatar: '',\n        roleId: '',\n        status: 1,\n        pwd: '',\n        sex: 0,\n        email: ''\n      }\n    },\n    beforeShow: function(title, isEditForm) {\n      this.title = title\n      this.isEditForm = isEditForm\n      this.dialogFormVisible = true\n    },\n    submit: function() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          if (this.isEditForm) {\n            update(this.form).then(res => {\n              this.$message.success('修改成功')\n              this.fetchUser()\n              this.close()\n            }).catch(err => {\n              console.error(err)\n            })\n          } else {\n            create(this.form).then(res => {\n              this.$message.success('添加成功')\n              this.userData.unshift(res.data)\n              this.close()\n            }).catch(err => {\n              console.error(err)\n            })\n          }\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    handleDelete: function(row) {\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const ids = []\n        if (row != null) {\n          ids.push(row.id)\n        } else {\n          this.multipleSelection.forEach(item => {\n            ids.push(item.id)\n          })\n        }\n        remove(ids).then(res => {\n          this.$message.success('删除用户成功')\n          this.fetchUser()\n        }).catch(err => {\n          console.log(err)\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消删除'\n        })\n      })\n    },\n    handleSizeChange: function(val) {\n      this.params.pageSize = val\n      this.fetchUser()\n    },\n    handleCurrentChange: function(val) {\n      this.params.pageNo = val\n      this.fetchUser()\n    },\n    close() {\n      this.dialogFormVisible = false\n      this.form = {}\n    },\n    handleClose: function(done) {\n      done()\n    },\n    formatTime: function(time) {\n      return parseTime(time)\n    },\n    // 关闭模态框\n    cancelModel() {\n      this.photoVisible = false\n    },\n    getChooseData(data) {\n      var that = this\n      this.photoVisible = false\n      this.photoList = data.photoList\n      if (this.photoList.length >= 1) {\n        this.form.avatar = this.photoList[0]\n      }\n    },\n    deletePhoto: function() {\n      this.form.avatar = null\n    },\n    checkPhoto: function() {\n      this.photoList = []\n      this.fileIds = ''\n      this.photoVisible = true\n      this.isFirstPhotoVisible = false\n    },\n    uploadBefore: function() {\n      this.openLoading()\n    },\n    uploadSectionFile: function(param) {\n      const file = param.file\n      this.files = file\n      // FormData 对象\n      var formData = new FormData()\n      // 文件对象\n      formData.append('multipartFile', this.files)\n      upload(formData).then(res => {\n        this.form.avatar = res.data\n        this.loading.close()\n      })\n    },\n    handleSelectionChange: function(val) {\n      this.multipleSelection = val\n    },\n    // 打开加载层\n    openLoading: function() {\n      this.loading = this.$loading({\n        lock: true,\n        text: '正在加载中~',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      })\n    }\n  }\n}\n</script>\n<style>\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n</style>\n"]}]}