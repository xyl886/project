/*
SQLyog Enterprise v12.09 (64 bit)
MySQL - 8.0.27 : Database - school
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`school` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;

USE `school`;

/*Table structure for table `banner` */

DROP TABLE IF EXISTS `banner`;

CREATE TABLE `banner` (
  `id` bigint NOT NULL COMMENT '主键',
  `img_path` varchar(500) DEFAULT NULL COMMENT '图片路径',
  `sort` int NOT NULL DEFAULT '0' COMMENT '排序',
  `remark` varchar(225) DEFAULT NULL COMMENT '备注',
  `status` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否禁用 0否 1是',
  `deleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT '逻辑删除标记 是否已删除: 0否  1是',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='首页轮播图';

/*Data for the table `banner` */

insert  into `banner`(`id`,`img_path`,`sort`,`remark`,`status`,`deleted`,`create_time`,`update_time`) values (1,'/image/banner6.jpg',5,'5',0,0,'2023-01-16 23:53:33','2023-01-16 23:53:37'),(2,'/image/banner7.jpg',4,'4',0,0,'2023-01-15 23:56:34','2023-01-15 23:56:38'),(3,'/image/banner8.jpg',3,'3',0,0,'2023-01-14 23:56:40','2023-01-14 23:56:43'),(4,'/image/banner9.jpg',2,'2',0,0,'2023-01-13 23:56:45','2023-01-13 23:56:48'),(5,'/image/banner10.jpg',1,'1',0,0,'2023-01-12 23:57:01','2023-01-13 23:56:58');

/*Table structure for table `category` */

DROP TABLE IF EXISTS `category`;

CREATE TABLE `category` (
  `id` int NOT NULL COMMENT '主键',
  `category_name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '分类名字',
  `icon` varchar(100) DEFAULT NULL COMMENT '图标',
  `deleted` tinyint(1) DEFAULT '0' COMMENT '逻辑标记 0否 1是',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `category` */

insert  into `category`(`id`,`category_name`,`icon`,`deleted`,`create_time`,`update_time`) values (1,'学习',NULL,0,NULL,NULL),(2,'生活',NULL,0,NULL,NULL),(3,'娱乐',NULL,0,NULL,NULL),(4,'求助',NULL,0,NULL,NULL),(5,'就业',NULL,0,NULL,NULL),(6,'新闻',NULL,0,NULL,NULL),(7,'公告',NULL,0,NULL,NULL),(8,'我的关注',NULL,0,NULL,NULL);

/*Table structure for table `collect` */

DROP TABLE IF EXISTS `collect`;

CREATE TABLE `collect` (
  `id` bigint NOT NULL COMMENT '主键',
  `user_id` bigint NOT NULL COMMENT '用户主键',
  `posts_id` bigint NOT NULL COMMENT '帖子主键',
  `posts_user_id` bigint NOT NULL COMMENT '帖子所属用户主键',
  `status` tinyint(1) DEFAULT '0' COMMENT '是否已读 0否  1是',
  `deleted` tinyint(1) DEFAULT '0' COMMENT '逻辑删除标记 是否已删除: 0否  1是',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `user_id_posts_id` (`user_id`,`posts_id`) USING BTREE,
  KEY `user_id` (`user_id`) USING BTREE,
  KEY `posts_id` (`posts_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='用户收藏';

/*Data for the table `collect` */

insert  into `collect`(`id`,`user_id`,`posts_id`,`posts_user_id`,`status`,`deleted`,`create_time`,`update_time`) values (1656223998598406145,1613844709376036866,1656183584474406914,1611899504066359297,0,0,'2023-05-10 17:05:47','2023-05-10 17:05:47'),(1656224172313894913,1611899504066359297,1656183584474406914,1611899504066359297,0,1,'2023-05-10 17:06:28','2023-06-19 15:26:04'),(1657342214187945985,1611899504066359297,1656225270076497921,1611899504066359297,0,1,'2023-05-13 19:09:10','2023-06-10 19:11:20'),(1658267056445808642,1611899504066359297,44,1611899504066359297,0,1,'2023-05-16 08:24:10','2023-06-19 15:25:03'),(1658267262293860354,1611899504066359297,1656183523170459649,1611899504066359297,0,1,'2023-05-16 08:24:59','2023-06-19 15:25:01'),(1658273140849991682,1611899504066359297,12,1611899504066359297,0,1,'2023-05-16 08:48:21','2023-06-19 15:25:00'),(1658273155303563266,1611899504066359297,46,1611899504066359297,0,1,'2023-05-16 08:48:24','2023-06-19 15:24:58'),(1658273164526837761,1611899504066359297,38,1611899504066359297,0,1,'2023-05-16 08:48:26','2023-06-19 15:24:56'),(1658273177680175106,1611899504066359297,25,1611899504066359297,0,1,'2023-05-16 08:48:29','2023-06-19 15:24:54'),(1658273190577659905,1611899504066359297,10,1611899504066359297,0,1,'2023-05-16 08:48:33','2023-06-19 15:24:53'),(1658273207359070209,1611899504066359297,15,1611899504066359297,0,1,'2023-05-16 08:48:37','2023-06-19 15:24:51'),(1658286781158612994,1611899504066359297,1,1611899504066359297,0,0,'2023-05-16 09:42:33','2023-06-27 18:17:39'),(1658840379081998337,1611899504066359297,5,1611899504066359297,0,1,'2023-05-17 22:22:21','2023-06-19 15:24:47'),(1658844537046548481,1611899504066359297,19,1611899504066359297,0,1,'2023-05-17 22:38:52','2023-06-21 16:44:50'),(1659465760654860289,1611899504066359297,24,1611899504066359297,0,1,'2023-05-19 15:47:23','2023-06-19 15:15:52'),(1659902659550785538,1611899504066359297,26,1611899504066359297,0,1,'2023-05-20 20:43:28','2023-06-19 15:15:51'),(1663179047871475714,1611899504066359297,36,1611899504066359297,0,1,'2023-05-29 21:42:40','2023-06-19 15:15:49'),(1665974563520909313,1664233745818914817,1665974447447740417,1664233745818914817,0,0,'2023-06-06 14:51:03','2023-06-28 14:34:53'),(1665974699315695618,1611899504066359297,1665974447447740417,1664233745818914817,0,1,'2023-06-06 14:51:35','2023-06-28 00:11:50'),(1666734143385497601,1611899504066359297,17,1611899504066359297,0,1,'2023-06-08 17:09:21','2023-06-19 15:15:47'),(1667530076851400706,1611899504066359297,32,1611899504066359297,0,1,'2023-06-10 21:52:06','2023-06-17 17:34:32'),(1667537180731375618,1611899504066359297,1661986224153407489,1611899504066359297,0,1,'2023-06-10 22:20:20','2023-06-25 17:33:16'),(1670693179130654721,1611899504066359297,1670693139439955969,1611899504066359297,0,0,'2023-06-19 15:21:09','2023-06-27 18:17:12'),(1670694182299119618,1611899504066359297,1670693748092186626,1611899504066359297,0,0,'2023-06-19 15:25:08','2023-06-27 18:17:05'),(1670694198229086210,1611899504066359297,1670693615652843521,1611899504066359297,0,0,'2023-06-19 15:25:12','2023-06-23 00:57:03'),(1670694216277176321,1611899504066359297,1670693408974319617,1611899504066359297,0,0,'2023-06-19 15:25:16','2023-06-27 18:16:48'),(1670694251861651457,1611899504066359297,1668861470932226050,1611899504066359297,0,0,'2023-06-19 15:25:24','2023-06-27 18:17:49'),(1670694276582879234,1611899504066359297,1665973929178566657,1664233745818914817,0,1,'2023-06-19 15:25:30','2023-06-19 15:25:30'),(1670712383175143425,1664233745818914817,1670712361696112642,1664233745818914817,0,0,'2023-06-19 16:37:27','2023-06-19 16:43:10'),(1670712543896678402,1664233745818914817,1661986224153407489,1611899504066359297,0,0,'2023-06-19 16:38:05','2023-06-19 16:38:05'),(1670713843967340545,1664233745818914817,1656225270076497921,1611899504066359297,0,0,'2023-06-19 16:43:15','2023-06-19 16:43:15'),(1670713859259772930,1664233745818914817,1656183584474406914,1611899504066359297,0,0,'2023-06-19 16:43:19','2023-06-19 16:43:19'),(1670720879618699265,1664233745818914817,1665973929178566657,1664233745818914817,0,0,'2023-06-19 17:11:13','2023-06-19 17:11:13'),(1670994954857508866,1611899504066359297,1670711613386141697,1664233745818914817,0,1,'2023-06-20 11:20:17','2023-07-03 14:54:04'),(1671035599554932738,1611899504066359297,1670827158337060866,1611899504066359297,0,0,'2023-06-20 14:01:48','2023-06-20 15:17:49'),(1671035629250605057,1611899504066359297,1670712361696112642,1664233745818914817,0,0,'2023-06-20 14:01:55','2023-06-20 16:06:01'),(1671067670516191234,1611899504066359297,1671065580146380802,1611899504066359297,0,0,'2023-06-20 16:09:14','2023-06-20 16:29:35'),(1671078082594852865,1611899504066359297,1671075225921507330,1611899504066359297,0,0,'2023-06-20 16:50:37','2023-06-22 23:44:24'),(1671884269925986305,1611899504066359297,29,1611899504066359297,0,1,'2023-06-22 22:14:07','2023-06-22 22:14:07'),(1672880784849068034,1611899504066359297,1670823166051713026,1611899504066359297,0,0,'2023-06-25 16:13:54','2023-06-25 16:13:54'),(1673632263675367425,1611899504066359297,1668518740095950849,1611899504066359297,0,0,'2023-06-27 18:00:01','2023-06-27 18:00:01'),(1673636609230163969,1611899504066359297,1668865451171532801,1611899504066359297,0,0,'2023-06-27 18:17:17','2023-06-27 18:17:17'),(1673636629723533314,1611899504066359297,1668865137425010690,1611899504066359297,0,0,'2023-06-27 18:17:22','2023-06-27 18:17:22'),(1673636668495679490,1611899504066359297,1668864478390788097,1611899504066359297,0,1,'2023-06-27 18:17:31','2023-06-28 19:27:23'),(1673636721218080770,1611899504066359297,1668863444448727042,1611899504066359297,0,1,'2023-06-27 18:17:44','2023-06-28 19:13:44'),(1673636778088648706,1611899504066359297,3,1611899504066359297,0,0,'2023-06-27 18:17:57','2023-06-27 18:17:57'),(1673721529747124226,1671126780724977665,1668865451171532801,1611899504066359297,0,0,'2023-06-27 23:54:44','2023-06-27 23:54:44'),(1673721555156217857,1671126780724977665,1668865137425010690,1611899504066359297,0,0,'2023-06-27 23:54:50','2023-06-27 23:54:50'),(1673721566841548801,1671126780724977665,1668864478390788097,1611899504066359297,0,0,'2023-06-27 23:54:52','2023-06-27 23:54:52'),(1673721578250055682,1671126780724977665,1668863444448727042,1611899504066359297,0,0,'2023-06-27 23:54:55','2023-06-27 23:54:55'),(1673721591332089858,1671126780724977665,1668861470932226050,1611899504066359297,0,0,'2023-06-27 23:54:58','2023-06-27 23:54:58'),(1673721603839504386,1671126780724977665,1668518740095950849,1611899504066359297,0,0,'2023-06-27 23:55:01','2023-06-27 23:55:01'),(1673721744868782082,1671126780724977665,1671075225921507330,1611899504066359297,0,0,'2023-06-27 23:55:35','2023-06-27 23:55:35'),(1673721759800504322,1671126780724977665,1671065580146380802,1611899504066359297,0,0,'2023-06-27 23:55:38','2023-06-27 23:55:38'),(1673725270202265601,1671126780724977665,1673724569296318466,1671126780724977665,0,0,'2023-06-28 00:09:35','2023-06-28 00:09:35'),(1673725287843508225,1671126780724977665,1673725222609498114,1671126780724977665,0,0,'2023-06-28 00:09:40','2023-06-28 00:09:40'),(1673854196576718850,1671126780724977665,1670693139439955969,1611899504066359297,0,0,'2023-06-28 08:41:54','2023-06-28 08:41:54'),(1673943082346766338,1664233745818914817,1673856840707903490,1611899504066359297,0,1,'2023-06-28 14:35:06','2023-06-28 14:35:07'),(1673958417527488513,1611899504066359297,1673856840707903490,1611899504066359297,0,0,'2023-06-28 15:36:02','2023-06-29 21:49:09'),(1675759758176489473,1611899504066359297,4,1611899504066359297,0,1,'2023-07-03 14:53:55','2023-07-03 14:53:55'),(1675760264143769602,1611899504066359297,1673721377225453569,1671126780724977665,0,0,'2023-07-03 14:55:56','2023-07-03 14:55:56');

/*Table structure for table `comment_like` */

DROP TABLE IF EXISTS `comment_like`;

CREATE TABLE `comment_like` (
  `id` bigint NOT NULL COMMENT '主键',
  `user_id` bigint NOT NULL COMMENT '用户id',
  `comment_id` bigint NOT NULL COMMENT '评论id',
  `deleted` int DEFAULT '0' COMMENT '逻辑删除0否 1是',
  `status` int DEFAULT '0' COMMENT '已读标记0否 1是',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

/*Data for the table `comment_like` */

insert  into `comment_like`(`id`,`user_id`,`comment_id`,`deleted`,`status`,`create_time`,`update_time`) values (1676522725201424386,1611899504066359297,1674391883100467201,0,0,'2023-07-05 17:25:41','2023-07-05 17:25:41'),(1676525348801601538,1611899504066359297,1676525322146799617,0,0,'2023-07-05 17:36:06','2023-07-05 17:36:06'),(1676760081246490625,1611899504066359297,1671052043634200578,0,0,'2023-07-06 09:08:51','2023-07-06 09:08:51'),(1676760084992004097,1611899504066359297,1671052024466231298,0,0,'2023-07-06 09:08:52','2023-07-06 09:08:52'),(1676760090541068290,1611899504066359297,1671052094104260610,0,0,'2023-07-06 09:08:53','2023-07-06 09:08:53'),(1676847358903595010,1611899504066359297,1676847351550980098,0,0,'2023-07-06 14:55:39','2023-07-06 14:55:39'),(1676848932333826049,1611899504066359297,1676847336950607873,0,0,'2023-07-06 15:01:54','2023-07-06 15:01:54'),(1676848938675613697,1611899504066359297,1676847323524640770,0,0,'2023-07-06 15:01:56','2023-07-06 15:01:56'),(1676863187330285569,1611899504066359297,1676863175720452097,0,0,'2023-07-06 15:58:33','2023-07-06 15:58:33'),(1679411293283397634,1611899504066359297,1679033764933574657,0,0,'2023-07-13 16:43:49','2023-07-13 16:43:49'),(1679411298664689666,1611899504066359297,1679024789961838594,0,0,'2023-07-13 16:43:50','2023-07-13 16:43:50');

/*Table structure for table `follow` */

DROP TABLE IF EXISTS `follow`;

CREATE TABLE `follow` (
  `id` bigint NOT NULL COMMENT '主键',
  `user_id` bigint NOT NULL COMMENT '用户主键',
  `be_followed_user_id` bigint NOT NULL COMMENT '被关注用户主键',
  `status` tinyint(1) DEFAULT '0' COMMENT '是否已读 0否  1是',
  `deleted` tinyint(1) DEFAULT '0' COMMENT '逻辑删除标记 是否已删除: 0否  1是',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `user_id_be_followed_user_id` (`user_id`,`be_followed_user_id`) USING BTREE,
  KEY `user_id` (`user_id`) USING BTREE,
  KEY `be_followed_user_id` (`be_followed_user_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='用户关注';

/*Data for the table `follow` */

insert  into `follow`(`id`,`user_id`,`be_followed_user_id`,`status`,`deleted`,`create_time`,`update_time`) values (1670710617561903106,1664233745818914817,1611899504066359297,0,0,'2023-06-19 16:30:26','2023-06-19 16:30:26'),(1673721521333350401,1671126780724977665,1611899504066359297,0,0,'2023-06-27 23:54:42','2023-06-27 23:54:42'),(1673956788887633922,1611899504066359297,1671126780724977665,0,0,'2023-06-28 15:29:34','2023-06-28 19:48:19');

/*Table structure for table `friend` */

DROP TABLE IF EXISTS `friend`;

CREATE TABLE `friend` (
  `id` bigint NOT NULL COMMENT '主键',
  `user_id` bigint DEFAULT NULL COMMENT '用户id',
  `friend_id` bigint DEFAULT NULL COMMENT '好友id',
  `friend_nickname` varchar(50) DEFAULT NULL COMMENT '好友昵称',
  `deleted` tinyint(1) DEFAULT '0' COMMENT '逻辑删除0否1是',
  `create_time` datetime DEFAULT NULL COMMENT '添加时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

/*Data for the table `friend` */

/*Table structure for table `history` */

DROP TABLE IF EXISTS `history`;

CREATE TABLE `history` (
  `id` bigint NOT NULL COMMENT '主键',
  `user_id` bigint NOT NULL COMMENT '浏览用户主键',
  `posts_id` bigint NOT NULL COMMENT '帖子主键',
  `deleted` tinyint NOT NULL DEFAULT '0' COMMENT '是否已删除: 0否  1是',
  `create_time` datetime DEFAULT NULL COMMENT '首次浏览时间',
  `update_time` datetime DEFAULT NULL COMMENT '最近浏览时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `history` */

insert  into `history`(`id`,`user_id`,`posts_id`,`deleted`,`create_time`,`update_time`) values (1658835283560480770,1611899504066359297,5,0,'2023-05-17 22:02:06','2023-06-08 17:09:28'),(1658840321309655042,1611899504066359297,1656225315626639361,0,'2023-05-17 22:22:07','2023-05-26 00:06:47'),(1658840330096721922,1611899504066359297,1658106773811163138,0,'2023-05-17 22:22:09','2023-05-26 00:00:30'),(1658840355950411778,1611899504066359297,1656225270076497921,0,'2023-05-17 22:22:15','2023-06-19 15:26:02'),(1658840370223628290,1611899504066359297,1656183584474406914,0,'2023-05-17 22:22:19','2023-06-19 15:28:20'),(1658843841236680705,1611899504066359297,26,0,'2023-05-17 22:36:06','2023-06-19 15:15:33'),(1658844533141651458,1611899504066359297,19,0,'2023-05-17 22:38:51','2023-06-27 14:26:05'),(1658845107916488705,1611899504066359297,24,0,'2023-05-17 22:41:08','2023-06-19 15:15:25'),(1658854831944744961,1611899504066359297,1656183523170459649,0,'2023-05-17 23:19:47','2023-06-08 17:10:21'),(1658854863162949633,1611899504066359297,25,0,'2023-05-17 23:19:54','2023-05-17 23:19:54'),(1659851002636939265,1611899504066359297,14,0,'2023-05-20 17:18:12','2023-05-20 17:18:12'),(1659951556545490946,1611899504066359297,36,0,'2023-05-20 23:57:46','2023-06-19 15:14:55'),(1660979495240220673,1611899504066359297,17,0,'2023-05-23 20:02:26','2023-06-19 15:15:20'),(1661310300583927809,1611899504066359297,1661310271332851714,0,'2023-05-24 17:56:56','2023-05-26 17:33:50'),(1661400395592802305,1611899504066359297,1661400356086652929,0,'2023-05-24 23:54:56','2023-06-25 23:18:09'),(1661401521251721217,1611899504066359297,1661401500175343617,0,'2023-05-24 23:59:25','2023-06-25 16:57:07'),(1661892801773719554,1611899504066359297,1661892777849409537,0,'2023-05-26 08:31:35','2023-06-25 16:37:29'),(1662029366932131842,1611899504066359297,32,0,'2023-05-26 17:34:15','2023-06-17 17:32:35'),(1665904919837675522,1611899504066359297,46,0,'2023-06-06 10:14:19','2023-06-06 16:25:44'),(1665974544088698881,1664233745818914817,1665974447447740417,0,'2023-06-06 14:50:58','2023-06-28 14:34:57'),(1665998275951550465,1611899504066359297,38,0,'2023-06-06 16:25:16','2023-06-06 16:25:16'),(1666735062084874242,1611899504066359297,1661986224153407489,0,'2023-06-08 17:13:00','2023-06-27 17:11:24'),(1666964117371523073,1611899504066359297,1665974447447740417,1,'2023-06-09 08:23:11','2023-06-28 00:18:55'),(1667158202061492226,1611899504066359297,3,1,'2023-06-09 21:14:24','2023-06-27 18:17:57'),(1668521634039881729,1611899504066359297,1668518740095950849,1,'2023-06-13 15:32:12','2023-06-27 23:48:15'),(1668864401815379969,1611899504066359297,1668863444448727042,1,'2023-06-14 14:14:14','2023-06-27 23:48:24'),(1668865041874571266,1611899504066359297,1668864478390788097,1,'2023-06-14 14:16:47','2023-06-27 23:48:22'),(1668865337006772226,1611899504066359297,1668865137425010690,1,'2023-06-14 14:17:57','2023-06-28 15:46:31'),(1669597183407648769,1611899504066359297,1668865451171532801,1,'2023-06-16 14:46:03','2023-06-28 09:19:47'),(1669597234133561346,1611899504066359297,7,0,'2023-06-16 14:46:15','2023-06-19 15:15:29'),(1670635067921145857,1611899504066359297,1668861470932226050,1,'2023-06-19 11:30:14','2023-06-28 15:29:16'),(1670693164005994497,1611899504066359297,1670693139439955969,1,'2023-06-19 15:21:05','2023-06-27 18:17:12'),(1670693642710298626,1611899504066359297,1670693615652843521,0,'2023-06-19 15:22:59','2023-06-27 18:17:00'),(1670694176892661762,1611899504066359297,1670693748092186626,1,'2023-06-19 15:25:06','2023-06-27 18:17:04'),(1670694216600137729,1611899504066359297,1670693408974319617,0,'2023-06-19 15:25:16','2023-06-27 18:16:55'),(1670694276914229250,1611899504066359297,1665973929178566657,0,'2023-06-19 15:25:30','2023-06-19 15:25:54'),(1670712376334233602,1664233745818914817,1670712361696112642,0,'2023-06-19 16:37:26','2023-06-19 16:43:10'),(1670712525164916738,1664233745818914817,1661986224153407489,0,'2023-06-19 16:38:01','2023-06-19 16:43:14'),(1670713844491628546,1664233745818914817,1656225270076497921,0,'2023-06-19 16:43:16','2023-06-19 16:43:16'),(1670713858664181762,1664233745818914817,1656183584474406914,0,'2023-06-19 16:43:19','2023-06-19 16:43:19'),(1670720870311538690,1664233745818914817,1665973929178566657,0,'2023-06-19 17:11:11','2023-06-19 17:11:11'),(1670827171117105153,1611899504066359297,1670827158337060866,1,'2023-06-20 00:13:35','2023-06-28 09:09:58'),(1670993304495353857,1611899504066359297,1670711613386141697,0,'2023-06-20 11:13:44','2023-06-20 15:02:13'),(1671035612259479554,1611899504066359297,1670823166051713026,0,'2023-06-20 14:01:51','2023-06-27 14:50:34'),(1671035622975926274,1611899504066359297,1670712361696112642,0,'2023-06-20 14:01:54','2023-06-20 16:09:06'),(1671065592108535810,1611899504066359297,1671065580146380802,1,'2023-06-20 16:00:59','2023-06-28 09:11:00'),(1671075402933719042,1611899504066359297,1671075225921507330,1,'2023-06-20 16:39:58','2023-06-28 09:41:39'),(1671884268764164097,1611899504066359297,29,0,'2023-06-22 22:14:06','2023-06-25 16:33:11'),(1673636314253152258,1611899504066359297,1,1,'2023-06-27 18:16:07','2023-06-28 00:13:41'),(1673720640433041409,1671126780724977665,1668864478390788097,0,'2023-06-27 23:51:12','2023-06-27 23:54:52'),(1673720710947680257,1671126780724977665,1668865451171532801,0,'2023-06-27 23:51:28','2023-06-27 23:56:08'),(1673721412239503362,1671126780724977665,1668865137425010690,0,'2023-06-27 23:54:16','2023-06-27 23:54:50'),(1673721477926498306,1671126780724977665,1673721377225453569,0,'2023-06-27 23:54:31','2023-06-27 23:54:31'),(1673721578967281665,1671126780724977665,1668863444448727042,0,'2023-06-27 23:54:55','2023-06-27 23:54:55'),(1673721592833650689,1671126780724977665,1668861470932226050,0,'2023-06-27 23:54:59','2023-06-27 23:54:59'),(1673721603512348674,1671126780724977665,1668518740095950849,0,'2023-06-27 23:55:01','2023-06-27 23:55:01'),(1673721745263046657,1671126780724977665,1671075225921507330,0,'2023-06-27 23:55:35','2023-06-27 23:55:35'),(1673721760786165762,1671126780724977665,1671065580146380802,0,'2023-06-27 23:55:39','2023-06-27 23:55:39'),(1673724596009840641,1671126780724977665,1673724569296318466,0,'2023-06-28 00:06:55','2023-06-28 00:09:32'),(1673725240976355330,1671126780724977665,1673725222609498114,0,'2023-06-28 00:09:28','2023-06-28 00:10:08'),(1673854185755414530,1671126780724977665,1670693139439955969,0,'2023-06-28 08:41:51','2023-06-28 08:41:57'),(1673857078516551682,1611899504066359297,1673856840707903490,1,'2023-06-28 08:53:21','2023-06-28 15:36:00'),(1673859792688418818,1611899504066359297,1673859776376770561,1,'2023-06-28 09:04:08','2023-06-28 09:08:23'),(1673943072498540545,1664233745818914817,1673856840707903490,0,'2023-06-28 14:35:04','2023-06-28 14:35:04'),(1673956786379440129,1611899504066359297,1673721377225453569,1,'2023-06-28 15:29:33','2023-06-28 15:29:33'),(1673958688173342722,1611899504066359297,1673723540135751681,1,'2023-06-28 15:37:07','2023-06-28 15:37:07'),(1673960000004833282,1611899504066359297,1673721377225453569,1,'2023-06-28 15:42:19','2023-06-28 15:43:00'),(1673996049372532737,1611899504066359297,1673856840707903490,0,'2023-06-28 18:05:34','2023-07-04 10:06:27'),(1673999842013147137,1611899504066359297,1673721377225453569,0,'2023-06-28 18:20:38','2023-07-12 15:43:45'),(1674025048110813185,1611899504066359297,1668865451171532801,0,'2023-06-28 20:00:48','2023-07-03 14:56:05'),(1674025062803460098,1611899504066359297,1668865137425010690,0,'2023-06-28 20:00:52','2023-06-28 20:00:52'),(1674026895030636546,1611899504066359297,1668518740095950849,0,'2023-06-28 20:08:08','2023-07-04 16:20:17'),(1674414757748256770,1611899504066359297,3,0,'2023-06-29 21:49:22','2023-06-29 21:49:22'),(1674429983000473602,1611899504066359297,1673725222609498114,0,'2023-06-29 22:49:52','2023-07-06 14:38:32'),(1674430033827049473,1611899504066359297,1673724569296318466,0,'2023-06-29 22:50:04','2023-06-29 22:50:04'),(1674595008855932930,1611899504066359297,1665974447447740417,0,'2023-06-30 09:45:37','2023-06-30 09:45:37'),(1674635999990251522,1611899504066359297,1671065580146380802,0,'2023-06-30 12:28:30','2023-06-30 12:28:30'),(1675759326523887617,1611899504066359297,4,0,'2023-07-03 14:52:12','2023-07-03 14:52:35'),(1675759359684055041,1611899504066359297,2,0,'2023-07-03 14:52:20','2023-07-03 14:52:20'),(1678363470530023425,1611899504066359297,1678315488757653506,0,'2023-07-10 19:20:09','2023-07-11 08:59:32'),(1679026983171825665,1664233745818914817,1678315488757653506,0,'2023-07-12 15:16:42','2023-07-12 17:38:52'),(1679062829577093122,1671126780724977665,1678315488757653506,0,'2023-07-12 17:39:09','2023-07-12 17:39:09');

/*Table structure for table `message` */

DROP TABLE IF EXISTS `message`;

CREATE TABLE `message` (
  `id` bigint NOT NULL COMMENT '主键',
  `from_id` bigint NOT NULL COMMENT '发送者id',
  `to_id` bigint NOT NULL COMMENT '接收者id',
  `message` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '信息内容',
  `deleted` tinyint(1) DEFAULT '0' COMMENT '逻辑删除0否 1是',
  `create_time` datetime DEFAULT NULL COMMENT '发送时间',
  `update_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `message` */

insert  into `message`(`id`,`from_id`,`to_id`,`message`,`deleted`,`create_time`,`update_time`) values (1679029595610849282,1611899504066359297,1671126780724977665,'hello！',0,'2023-07-12 15:27:05','2023-07-12 15:27:05'),(1679030303651307522,1671126780724977665,1611899504066359297,'hello',0,'2023-07-12 16:13:14','2023-07-12 16:13:18'),(1679034197617975297,1611899504066359297,1671126780724977665,'hello',0,'2023-07-12 15:45:22','2023-07-12 15:45:22'),(1679034256875102210,1611899504066359297,1671126780724977665,'hello！?',0,'2023-07-12 15:45:36','2023-07-12 15:45:36');

/*Table structure for table `posts` */

DROP TABLE IF EXISTS `posts`;

CREATE TABLE `posts` (
  `id` bigint NOT NULL COMMENT '主键',
  `user_id` bigint NOT NULL COMMENT '帖子所属用户主键',
  `school` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '帖子标签',
  `posts_type` tinyint NOT NULL COMMENT '帖子类型',
  `title` varchar(225) NOT NULL COMMENT '标题',
  `description` varchar(225) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '帖子描述',
  `content` mediumtext COMMENT '内容',
  `price` decimal(10,2) NOT NULL DEFAULT '0.00' COMMENT '单价',
  `cover_path` varchar(500) DEFAULT NULL COMMENT '封面图片',
  `img_path` varchar(2000) DEFAULT NULL COMMENT '图片，多张英文逗号分割',
  `browse_num` int NOT NULL DEFAULT '0' COMMENT '浏览数量',
  `collect_num` int NOT NULL DEFAULT '0' COMMENT '收藏数量',
  `like_num` int NOT NULL DEFAULT '0' COMMENT '点赞数量',
  `comment_num` int NOT NULL DEFAULT '0' COMMENT '评论数量',
  `version` int NOT NULL DEFAULT '0' COMMENT '版本号',
  `status` tinyint(1) NOT NULL DEFAULT '0' COMMENT '1 审核中 2 已发布 3 下架 4 回收站',
  `deleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT '逻辑删除标记 是否已删除: 0否  1是',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='帖子';

/*Data for the table `posts` */

insert  into `posts`(`id`,`user_id`,`school`,`posts_type`,`title`,`description`,`content`,`price`,`cover_path`,`img_path`,`browse_num`,`collect_num`,`like_num`,`comment_num`,`version`,`status`,`deleted`,`create_time`,`update_time`) values (1,1611899504066359297,'1',2,'如何高效地记忆单词？','如何高效地记忆单词？','<p>在学习英语的过程中，记忆单词是非常重要的一步。但是很多人都会遇到记忆效率低下的问题。这里分享一些高效记忆单词的方法：分组记忆、联想记忆、场景记忆、音标记忆等。同时，多背诵、多复习可以加深记忆，记忆单词也需要持之以恒的坚持。</p>\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/6c466c99b38c47f9b99d1fd254af36ca.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/6c466c99b38c47f9b99d1fd254af36ca.jpg,https://18066.oss-cn-hangzhou.aliyuncs.com/a7de547d30384f30b6020b037fe2f07c.jpg,https://18066.oss-cn-hangzhou.aliyuncs.com/7ecd891437bd4376b8bcea555f77405a.jpg',29,1,0,0,2,3,0,'2022-02-17 00:29:38','2023-06-27 18:19:01'),(3,1611899504066359297,'1',2,'如何写好论文？','如何高效地记忆单词？','<p>论文是很多学术研究者必须要面对的一个任务。写好论文需要注意以下几点：明确论文研究问题、撰写清晰的论文提纲、注重论文结构、合理引用文献、注意语言表达等。</p>\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/36749d1f11434c73bc015fadc5d17521.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/36749d1f11434c73bc015fadc5d17521.jpg',36,1,0,0,3,3,0,'2022-12-30 03:05:22','2023-06-27 18:15:24'),(1665974447447740417,1664233745818914817,'6',2,'邀请各位同学参加校运会','本校即将举办校运会，各项运动项目都有，欢迎各位同学积极参加。','<p>本校即将举办校运会，届时将有各种运动项目，包括田径、篮球、足球等等，欢迎各位同学积极参加。参加校运会不仅可以锻炼身体，还可以结交更多的朋友，欢迎大家踊跃报名。</p>\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/7285795303434b2ebcb238fe1d74127c.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/7285795303434b2ebcb238fe1d74127c.jpg',38,1,1,0,0,3,0,'2023-06-06 14:50:35','2023-06-28 14:34:05'),(1668518740095950849,1611899504066359297,'1',1,'求购二手自习室用书架','急需一套二手自习室用书架，如果有闲置的同学请联系我。','<p>本人最近在自习室学习，需要购买一套书架来摆放书籍和学习资料。如果有闲置的同学愿意出售，请私信联系我，感谢各位同学的帮助。</p>\r\n','12.00','https://18066.oss-cn-hangzhou.aliyuncs.com/187425587c10428481d88eb13f7fdb1f.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/187425587c10428481d88eb13f7fdb1f.jpg,https://18066.oss-cn-hangzhou.aliyuncs.com/bb1aa527ecb54cbfbf7d15f45a72a5d4.jpg',19,2,0,0,0,3,0,'2023-06-13 15:20:42','2023-06-27 17:59:55'),(1668861470932226050,1611899504066359297,'1',1,'二手平板电视出售','一台二手平板电视出售，价格便宜，需要的同学请联系我。','本人因搬家需要处理掉一台二手平板电视，品相良好，价格便宜，适合宿舍使用。需要的同学请联系我。','11.00','https://18066.oss-cn-hangzhou.aliyuncs.com/1987793efa3140baa9b88c9020b34fe4.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/1987793efa3140baa9b88c9020b34fe4.jpg',6,2,0,0,0,3,0,'2023-06-14 14:02:35','2023-06-14 14:02:35'),(1668863444448727042,1611899504066359297,'1',1,'寻找二手微波炉','急需一台二手微波炉，如果有闲置的同学请联系我。','<p>本人最近需要购买一台微波炉，但是预算有限，想看看校园里有没有闲置的同学愿意出售。如果有的话，请私信联系我，感谢各位同学的帮助。</p>\r\n','11.00','https://18066.oss-cn-hangzhou.aliyuncs.com/6c02843a749e476daadaa7952dbbe8a3.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/6c02843a749e476daadaa7952dbbe8a3.jpg,https://18066.oss-cn-hangzhou.aliyuncs.com/ee288bb67bd34c5b94bac486007da340.jpg',6,1,0,0,0,3,0,'2023-06-14 14:10:26','2023-06-27 17:59:02'),(1668864478390788097,1611899504066359297,'1',1,'免费送书桌椅一套','免费送一套书桌椅，需要的同学请私信我，先到先得。','<p>本人最近搬家，有一套书桌椅需要处理，因为旧了一些，所以不打算卖钱，只想送给有需要的同学。需要的同学请私信联系我，先到先得。</p>\r\n','11.00','https://18066.oss-cn-hangzhou.aliyuncs.com/c46ef35060cd43648abe1d40c6a3292d.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/c46ef35060cd43648abe1d40c6a3292d.jpg,https://18066.oss-cn-hangzhou.aliyuncs.com/9f8844a2222d40dab3f86fad49ddcfde.jpg',10,1,0,0,0,3,0,'2023-06-14 14:14:32','2023-06-27 17:58:26'),(1668865137425010690,1611899504066359297,'1',1,'求购二手电脑桌椅','急需一套二手电脑桌椅，如果有闲置的同学请私信我。','<p>本人最近需要购买一套电脑桌椅，但是预算有限，想看看校园里有没有闲置的同学愿意出售。如果有的话，请私信联系我，感谢各位同学的帮助。</p>\r\n','11.00','https://18066.oss-cn-hangzhou.aliyuncs.com/0fa0e44be3664f959e07c06b20587c2f.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/0fa0e44be3664f959e07c06b20587c2f.jpg,https://18066.oss-cn-hangzhou.aliyuncs.com/6604772c6f174f528e8a5b3492a1fe6e.jpg,https://18066.oss-cn-hangzhou.aliyuncs.com/5ea560bbe7064b7e97fbfb0dfbb6d731.jpg',15,2,0,0,0,3,0,'2023-06-14 14:17:09','2023-06-27 18:00:39'),(1668865451171532801,1611899504066359297,'1',1,'二手自行车转让','一辆二手自行车，外观无明显划痕，价格可议。','<p>本人因搬家需要处理掉一辆二手自行车，车况良好，使用时间不长，骑行顺畅，适合校园代步。价格可以商量，请有需要的同学私信联系我。</p>\r\n','200.00','https://18066.oss-cn-hangzhou.aliyuncs.com/a1949749d64143eb992f5cc887f88189.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/a1949749d64143eb992f5cc887f88189.jpg',15,2,0,0,0,3,0,'2023-06-14 14:18:24','2023-06-28 09:19:53'),(1670693139439955969,1611899504066359297,'1',2,'如何高效地记忆单词？','在学习英语的过程中，记忆单词是非常重要的一步。但是很多人都会遇到记忆效率低下的问题。这里分享一些高效记忆单词的方法：分组记忆、联想记忆、场景记忆、音标记忆等。同时，多背诵、多复习可以加深记忆，记忆单词也需要持之以恒的坚持。','在学习英语的过程中，记忆单词是非常重要的一步。但是很多人都会遇到记忆效率低下的问题。这里分享一些高效记忆单词的方法：分组记忆、联想记忆、场景记忆、音标记忆等。同时，多背诵、多复习可以加深记忆，记忆单词也需要持之以恒的坚持。\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/9669c9207539422dafd1c9df421d909c.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/9669c9207539422dafd1c9df421d909c.jpg',12,2,0,0,0,3,0,'2023-06-19 15:20:59','2023-06-19 15:20:59'),(1670693408974319617,1611899504066359297,'1',2,'如何提高阅读理解能力？','如何提高阅读理解能力？','阅读理解是很多考试和工作中的必要技能，但是很多人在阅读理解上并不擅长。提高阅读理解能力需要多读、多练，同时可以尝试一些技巧：快速阅读、理清文章结构、注意关键词、多做题练习等。','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/566900a98e684ead943583b15e7a3a00.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/566900a98e684ead943583b15e7a3a00.jpg',7,1,0,0,0,3,0,'2023-06-19 15:22:03','2023-06-19 15:22:03'),(1670693615652843521,1611899504066359297,'1',2,'如何写好论文？','如何写好论文？','## 论文是很多学术研究者必须要面对的一个任务。写好论文需要注意以下几点：明确论文研究问题、撰写清晰的论文提纲、注重论文结构、合理引用文献、注意语言表达等。','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/5fb124cdd28a4ee8ad7c1a97dbdef233.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/5fb124cdd28a4ee8ad7c1a97dbdef233.jpg',7,1,0,0,0,3,0,'2023-06-19 15:22:53','2023-06-19 15:22:53'),(1670693748092186626,1611899504066359297,'1',2,'如何学好编程？','如何学好编程？','编程是一项需要不断学习和实践的技能，以下是一些学好编程的建议：选择适合自己的编程语言、掌握基础知识、多做练习、尝试写小项目、参加编程社区、阅读优秀的代码等。\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/b082fa7ce6cb45cc860d615d085df0b1.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/b082fa7ce6cb45cc860d615d085df0b1.jpg',5,1,0,0,0,3,0,'2023-06-19 15:23:24','2023-06-19 15:23:24'),(1670711613386141697,1664233745818914817,'2',2,'如何养成良好的睡眠习惯？','如何养成良好的睡眠习惯？','良好的睡眠习惯对身体健康非常重要，以下是一些养成良好睡眠习惯的方法：保持规律作息时间、创造舒适的睡眠环境、规律运动、避免饮食过饱、减少使用电子设备等。\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/3fdad03377b34b9685d666a67e4f3a9e.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/3fdad03377b34b9685d666a67e4f3a9e.jpg',30,0,0,4,0,3,0,'2023-06-19 16:34:24','2023-06-19 16:34:24'),(1670712361696112642,1664233745818914817,'2',2,'如何学习做饭？','如何学习做饭？','做饭是一项基本技能，以下是一些学习做饭的方法：学习基础厨艺、掌握各类食材的烹饪方法、多尝试新的食谱、参加相关的烹饪课程等。','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/677053b0ad4f4a04a50faf6f0d39f412.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/677053b0ad4f4a04a50faf6f0d39f412.jpg',14,1,0,0,0,3,0,'2023-06-19 16:37:22','2023-06-19 16:37:22'),(1670823166051713026,1611899504066359297,'1',2,'如何学习生物信息学？','要学习生物信息学，你可以按照以下步骤进行：了解生物信息学的概念：生物信息学是生物学和计算机科学的交叉学科，利用计算机技术和算法来处理和分析生物学数据，以获取生物学信息和解决生物学问题。掌握基础生物学知识','要学习生物信息学，你可以按照以下步骤进行：\r\n\r\n1.了解生物信息学的概念：生物信息学是生物学和计算机科学的交叉学科，利用计算机技术和算法来处理和分析生物学数据，以获取生物学信息和解决生物学问题。\r\n\r\n2.掌握基础生物学知识：在学习生物信息学之前，建议你先学习一些基础的生物学知识，如生物化学、分子生物学、细胞生物学和遗传学等。这些知识将为你提供学习生物信息学的背景和基础。\r\n\r\n3.学习编程语言和计算机技术：在生物信息学中，编程是一项关键技能。推荐学习编程语言如Python和R，它们在生物信息学中应用广泛。此外，了解数据库、数据结构与算法、人工智能和计算机网络等方面的知识也是有益的。\r\n\r\n4.学习生物信息学相关课程：在本科阶段，你可以选择学习生物信息学相关的课程，如生物信息学、计算生物学、基因组学和生物统计学等。这些课程将帮助你深入了解生物信息学的理论和实践。\r\n\r\n5.培养数学功底：数学在生物信息学中起着重要的作用，涉及到统计学、图论等领域。除了学校的课程外，你可以自学相关的数学知识，以更好地应用于生物信息学的研究。\r\n\r\n6.实践和项目：在学习过程中，通过实践和参与生物信息学项目，你可以将所学知识应用于实际情境中，提高实际操作和问题解决能力。你可以使用公开可用的基因组数据或其他生物学数据，尝试复现已有的研究成果，构建分析流程，或者进行数据挖掘和分析。\r\n\r\n7.使用适当的工具和软件：生物信息学领域有许多工具，如R，Python，Excel等\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/5718d4e44bb94693a4631ab3a7a16d11.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/5718d4e44bb94693a4631ab3a7a16d11.jpg',19,1,2,0,0,3,0,'2023-06-19 23:57:40','2023-06-19 23:57:40'),(1670827158337060866,1611899504066359297,'1',2,'项目地址：https://github.com/playedu/PlayEdu 文档地址：https://www.playedu.xyz/docs/docs/intro','项目地址：https://github.com/playedu/PlayEdu 文档地址：https://www.playedu.xyz/docs/docs/intro','项目地址：https://github.com/playedu/PlayEdu\r\n文档地址：https://www.playedu.xyz/docs/docs/intro','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/3c67147fe1ff4da0bbf498e6b589f27e.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/3c67147fe1ff4da0bbf498e6b589f27e.jpg',24,1,0,0,0,3,0,'2023-06-20 00:13:32','2023-06-20 00:13:32'),(1671065580146380802,1611899504066359297,'1',2,'项目地址：https://github.com/playedu/PlayEdu 文档地址：https://www.playedu.xyz/docs/docs/intro','项目地址：https://github.com/playedu/PlayEdu 文档地址：https://www.playedu.xyz/docs/docs/intro','项目地址：https://github.com/playedu/PlayEdu \r\n文档地址：https://www.playedu.xyz/docs/docs/intro','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/7118142269b74e98b4cff4b0cc7815ac.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/7118142269b74e98b4cff4b0cc7815ac.jpg',23,2,0,0,0,3,0,'2023-06-20 16:00:56','2023-06-20 16:00:56'),(1671075225921507330,1611899504066359297,'5',2,'项目地址   文档地址','项目地址：https://github.com/playedu/PlayEdu 文档地址：https://www.playedu.xyz/docs/docs/intro','<p>项目地址：<a href=\"https://github.com/playedu/PlayEdu\">https://github.com/playedu/PlayEdu</a> <br>\r\n文档地址：<a href=\"https://www.playedu.xyz/docs/docs/intro\">https://www.playedu.xyz/docs/docs/intro</a></p>\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/4c929a34842a47c4b83df7deb2e4cfc2.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/4c929a34842a47c4b83df7deb2e4cfc2.jpg,https://18066.oss-cn-hangzhou.aliyuncs.com/454d28db246145c8870eb08d219e424f.jpg',155,2,0,0,0,3,0,'2023-06-20 16:39:16','2023-06-28 09:41:53'),(1673721377225453569,1671126780724977665,'1',1,'二手自行车','二手自行车','快毕业了，要离校了，二手自行车便宜出。','200.00','https://18066.oss-cn-hangzhou.aliyuncs.com/46db4ea5866541ebbae9b0e7b0ede045.webp','https://18066.oss-cn-hangzhou.aliyuncs.com/46db4ea5866541ebbae9b0e7b0ede045.webp',54,1,0,0,0,3,0,'2023-06-27 23:54:07','2023-06-27 23:54:07'),(1673723540135751681,1671126780724977665,'1',2,'【面试题-SpringBoot】SpringBoot 自动配置的原理是什么？','在SpringBoot项目的引导类上有一个 @SpringBootApplication 注解，这个注解是由 @SpringBootConfiguration、@EnableAutoConfiguration、@ComponentScan 三个注解组合的，其中 @EableAutoConfiguration 注解是实现自动配置的','在SpringBoot项目的引导类上有一个 **@SpringBootApplication** 注解，这个注解是由 **@SpringBootConfiguration**、**@EnableAutoConfiguration**、**@ComponentScan** 三个注解组合的，其中 **@EableAutoConfiguration** 注解是实现自动配置的关键，通过 **@Import** 注解导入对应的配置选择器，内部是通过读取项目导入的 jar 包的 **classpath** 路径下的 **META-INF**/ **spring.factories** 文件中配置的类的全类名，在这些配置类中所配置的 **Bean** 会根据条件注解所指定的条件来决定是否将 **Bean** 注入到 **Spring** 容器。','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/a4dae2f387dc4df5b6ca75ecaf5ec538.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/a4dae2f387dc4df5b6ca75ecaf5ec538.jpg',1,0,0,0,0,3,0,'2023-06-28 00:02:43','2023-06-28 00:02:43'),(1673724569296318466,1671126780724977665,'1',2,'【面试题-SpringMVC】SpringMVC执行流程是什么？','关于SpringMVC的执行流程分为如下两种情况：1、模板引擎渲染视图  2、前后端分离，接口开发','<h1>关于SpringMVC的执行流程分为如下两种情况：</h1>\r\n<h2>1、模板引擎渲染视图</h2>\r\n<p>1.客户端发送请求到 DispatcherServlet (前端控制器)，这是一个调度中心<br>\r\n2.DispatcherServlet 收到请求调用 HandlerMapping (处理器映射器)<br>\r\n3.HandlerMapping 找到对应的处理器，生成处理器对象以及拦截器（如果有），然后返回给 DispatcherServlet<br>\r\n4.DispatcherServlet 调用对应的 HandlerAdpater (处理器适配器)\r\n5.HandlerAdpater 经过适配调用对应的处理器（Controller）<br>\r\n6.处理器执行完成后返回ModelAndView对象<br>\r\n7.HandlerAdpater 将处理器的执行结果返回给 DispatcherServlet<br>\r\n8.DispatcherServlet 将ModelAndView 传给 ViewReslover (试图解析器)<br>\r\n9.ViewReslover 解析后返回具体的 View （视图）<br>\r\n10.DispatcherServlet 根据 View 进行视图渲染<br>\r\n11.DispatcherServlet 响应数据给客户端</p><br>\r\n<h2>2、前后端分离，接口开发</h2>\r\n<p>1.客户端发送请求到 DispatcherServlet（前端控制器），这是一个调度中心<br>\r\n2.DispatcherServlet 接收请求后，调用HandlerMapping （处理器映射器）<br>\r\n3.HandlerMapping 找到对应的处理器，生成处理器对象以及拦截器（如果有），然后返回给 DispatcherServlet<br>\r\n4.DispatcherServlet 调用 HandlerAdpater<br>\r\n5.HandlerAdpater 经过适配调用对应的处理器（Handler/Controller）\r\n6.处理器方法上添加了@ResponseBody注解<br>\r\n7.通过 HttpMessageConverter(消息转换器) 将响应内容转换为JSON<br>\r\n8.DispatcherServlet 响应数据给客户端</p>\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/d3c69334073b4317b1fb70234866cfda.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/d3c69334073b4317b1fb70234866cfda.jpg',6,1,0,0,0,3,0,'2023-06-28 00:06:48','2023-06-28 00:08:07'),(1673725222609498114,1671126780724977665,'1',2,'【后端】面试题挑战 Day13 有哪些注解可以注入 Bean？@Autowired 和 @Resource 的区别？','有哪些注解可以注入 Bean？@Autowired 和 @Resource 的区别？','有哪些注解可以注入 Bean？@Autowired 和 @Resource 的区别？','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/a3eb09f543da4ffd9f2e707479f21e52.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/a3eb09f543da4ffd9f2e707479f21e52.jpg',11,1,1,2,0,3,0,'2023-06-28 00:09:24','2023-06-28 00:09:24'),(1673856840707903490,1611899504066359297,'1',2,'常用注解 和 RESTful API','Spring常用注解 RESTful API 是什么？ 简记。......','<h3>● @Controller</h3>\r\n<p>Spring MVC 会将扫描到该注解的类，然后扫描这个类下面带有 @RequestMapping 注解的方法，根据注解信息，为这个方法生成一个对应的处理器对象(Handler)</p>\r\n<h3>● @RequestMapping</h3>\r\n<p>配置处理器的 HTTP 请求方法，URI等信息，这样才能将请求和方法进行映射。这个注解可以作用于类上面，也可以作用于方法上面，在类上面一般是配置这个控制器的 URI 前缀</p>\r\n<h3>● @RestController</h3>\r\n<p>在 @Controller 基础上，增加了 @ResponseBody 注解，更加适合目前前后端分离的架构下，提供 Restful API ，返回例如 JSON 数据格式。当然，返回什么样的数据格式，根据客户端的 ACCEPT 请求头来决定。</p>\r\n<h3>● @GetMapping</h3>\r\n<p>@GetMapping 是 @RequestMapping 的 GET 请求方法的特例，只作用方法上，目的是为了提高清晰度。 ○ 可进行 GET、POST、PUT、DELETE 等请求方法；可注解在类和方法上；</p>\r\n<h3>● 如何返回 JSON 格式？</h3>\r\n<p>可以使用 @ResponseBody 注解\r\n或者使用包含 @ResponseBody 注解的 @RestController 注解 使用时添加相关依赖 SpringMVC 和 Jackson 依赖即可直接返回\r\n@Controller\r\npublic class JSONController {</p>\r\n<pre><code>@RequestMapping(&quot;/testJavaBean&quot;)\r\n@ResponseBody\r\npublic User test(@RequestParam(&quot;name&quot;) String name) {\r\n    User user = new User();\r\n    user.setUserName(name);\r\n    user.setPassword(&quot;123456&quot;);\r\n    return user;\r\n}\r\n<p>@RequestMapping(&quot;/testMap&quot;)\r\n@ResponseBody\r\npublic Map test2(@RequestParam(&quot;name&quot;) String name) {\r\nMap&lt;String, Object&gt; map = new HashMap&lt;&gt;();\r\nmap.put(&quot;name&quot;, name);\r\nmap.put(&quot;test&quot;, 123);\r\nmap.put(&quot;array&quot;, new String[]{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;});\r\nreturn map;\r\n}\r\n</code></pre></p>\r\n<p>}\r\n真实开发时，JSON 数据一般是这样的，定义Result 类{ code:xx,data具体数据xx,message:“服务器错误x”}\r\na. 请求成功{code:xx, data:xx}</p>\r\n<p>b. 请求失败{code:xx,message:xx}</p>\r\n<p>public class APIResult {</p>\r\n<pre><code>private int code;\r\nprivate String message;\r\nprivate Object data;\r\n<p>public static APIResult createOk(Object data) {\r\nreturn createWithCodeAndData(ApiConstant.Code.OK, null, data);\r\n}</p>\r\n<p>public static APIResult createOKMessage(String message) {\r\nAPIResult result = new APIResult();\r\nresult.setCode(ApiConstant.Code.OK);\r\nresult.setMessage(message);\r\nreturn result;\r\n}</p>\r\n<p>public static APIResult createNg(String message) {\r\nreturn createWithCodeAndData(<a href=\"http://ApiConstant.Code.NG\">ApiConstant.Code.NG</a>, message, null);\r\n}</p>\r\n<p>private static APIResult createWithCodeAndData(int code, String message, Object data) {\r\nAPIResult result = new APIResult();\r\nresult.setCode(code);\r\nresult.setMessage(message);\r\nresult.setData(data);\r\nreturn result;\r\n}</p>\r\n<p>public int getCode() {\r\nreturn code;\r\n}</p>\r\n<p>public void setCode(int code) {\r\nthis.code = code;\r\n}</p>\r\n<p>public String getMessage() {\r\nreturn message;\r\n}</p>\r\n<p>public void setMessage(String message) {\r\nthis.message = message;\r\n}</p>\r\n<p>public Object getData() {\r\nreturn data;\r\n}</p>\r\n<p>public void setData(Object data) {\r\nthis.data = data;\r\n}\r\n</code></pre></p>\r\n<p>}</p>\r\n<h4>● REST: 表现层状态转移</h4>\r\n<p>人话说：使用HTTP协议，做动词来描述操作，url 作为名词表示资源\r\nServer和Client之间传递某资源的一个表现形式,e.g.,(JSON XML JPG)\r\nHTTP Status Code传递Server的状态信息</p>\r\n<h3>● RESTful API 就是符合REST原则的网络接口（Application Programming Interface）</h3>\r\n<p>case: Get-获取， POST-新建/更新资源， PUT-更新资源， DELETE-删除资源</p>\r\n<h4>DELETE</h4>\r\n<p><a href=\"http://api.qc.com/v1/\">http://api.qc.com/v1/</a>\r\nfriends: 删除某人的好友 （在http parameter指定好友id）</p>\r\n<h4>POST</h4>\r\n<p><a href=\"http://api.qc.com/v1/\">http://api.qc.com/v1/</a>\r\nfriends: 添加好友\r\nUPDATE</p>\r\n<h4>UPDATE</h4>\r\n<p>更新个人资料</p>\r\n<h4>● 为什么要使用 RESTful 设计？</h4>\r\n<p>更多是在前后端分离场景下，契合后端服务多端统一的需求\r\n通过一套统一的接口为 Web\\iOS\\Android 提供服务</p>\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/23b080e121cd4081a2359351e243e61d.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/23b080e121cd4081a2359351e243e61d.jpg,https://18066.oss-cn-hangzhou.aliyuncs.com/19ba35be15c9459d9c62fac17da51a71.jpg',17,1,1,0,0,3,1,'2023-06-28 08:52:24','2023-07-04 10:07:31'),(1673859776376770561,1611899504066359297,'1',2,'博客增加敏感词过滤功能','给博客增加一些敏感词过滤功能......','<h3>背景</h3>\r\n<p>昨天看知乎看到有举报不良内容的入口，想到应该可以给博客增加内容过滤。想了下似乎也不难实现，用Trie树就可以，那么说干就干</p>\r\n<h3>前置知识</h3>\r\n<p>对字典树有了解。这里就不讲了，网上很多学习资料，如</p>\r\n<p><a href=\"https://www.zhihu.com/\">知乎</a><br>\r\n<a href=\"https://www.cnblogs.com/\">博客园</a><br>\r\n<a href=\"https://www.csdn.net/\">CSDN</a><br>\r\n关于中文字符敏感词需额外的处理。这里顺带提一下，Java内使用的中文字符串编码为UTF-16；至于IDE和浏览器显示，一般也是UTF-8，UTF-16,GBK这些。 而这些编码方式，都是Unicode的一种实现。想了解Unicode和UTF-8这些编码的关系，可以阅读 ref</p>\r\n<h3>实现思路</h3>\r\n<p>初始化生成敏感词集Trie树\r\n扫描一遍源串，如果遇到当前字属于敏感词前缀，记录位置P1\r\nP2从P1开始，往后扫描，求得最长敏感词前缀串，记为S[P1,P2]\r\n校验S[P1,P2]是否是一个敏感词。（是敏感词前缀不一定是敏感词，敏感词一定是敏感词前缀）。如果是，替换敏感内容为’*\'，P1指向P2+1;如果不是，P1继续后溯\r\n时间复杂度：记源串长度M，构建的Trie树高度为lgN, 总时间复杂度是 O(MlgN)\r\n空间复杂度：构建敏感词集的字典树开销\r\n<img src=\"https://images.jquan.ink/images/blog-image/blogarticle/trietree.png\" alt=\"TrieTree\"></p>\r\n<h3>关键部分代码</h3>\r\n<pre><code>package com.jquan.blog.joey.util;\r\n\r\nimport org.junit.Test;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class WorldFilterUtil {\r\n   public static String[] sensWord = new String[]{&quot;xxxx&quot;};//敏感词集， \r\n  不方便放上 来了；后面有时间再添加到后台admin管理\r\npublic static Trie sensTree;\r\npublic static boolean isInitial; //只需要初始化一次/**\r\n * trie树包含一段前缀，这段前缀不一定是敏感词\r\n * 但是一段字符串是敏感词，肯定是trie树包含的前缀\r\n * @param originalStr 源字符串\r\n */\r\npublic static String filter(String originalStr) {\r\n    if(originalStr == null || originalStr.length()==0) return  originalStr;\r\n\r\n    char[] originalStrCrr = originalStr.toCharArray();\r\n    boolean find = false;\r\n\r\n    if (!isInitial) {\r\n        trieInitial();\r\n        isInitial = true;\r\n    }\r\n\r\n    for (int i = 0; i &lt; originalStr.length(); i++) {\r\n        String startWorld = originalStr.substring(i, i + 1);\r\n        if (!sensTree.startsWithPrefix(startWorld)) continue;\r\n\r\n        //存在以该字开头的前缀\r\n        int j = i + 1;\r\n       \r\n        while (j &lt;= originalStr.length() &amp;&amp; sensTree.startsWithPrefix(originalStr.substring(i, j)))\r\n            j++; //是前缀往后移动j指针\r\n\r\n        if (sensTree.search(originalStr.substring(i, j - 1))) { //找到敏感词\r\n            find = true;\r\n            for (int m = i; m &lt; j - 1; m++) {\r\n                originalStrCrr[m] = \'*\';\r\n            }\r\n        }\r\n\r\n    }\r\n    if (find) return String.valueOf(originalStrCrr);\r\n    return originalStr;\r\n\r\n}\r\n\r\npublic static void trieInitial() {\r\n    //初始化得到一个敏感词前缀树\r\n    sensTree = new Trie();\r\n    for (String e : sensWord) {\r\n        sensTree.addWord(e);\r\n    }\r\n    return;\r\n}\r\n</code></pre>\r\n<p>}</p>\r\n<pre><code> class Trie {\r\n    HashMap&lt;Character, Trie&gt; subs;\r\n    boolean isEnd;\r\n    int preFixCou;\r\n    int cou;\r\n\r\npublic Trie() {\r\n    subs = new HashMap&lt;&gt;();\r\n}\r\n\r\n  /**\r\n * 添加敏感词\r\n * @param word 敏感词\r\n * */\r\npublic void addWord(String word) {\r\n    if (word == null || word.length() == 0) return;\r\n    \r\n    Trie curNode = this;\r\n    for (int i = 0; i &lt; word.length(); i++) {\r\n        if (curNode.subs.containsKey(word.charAt(i))) {\r\n            curNode = curNode.subs.get(word.charAt(i));\r\n            curNode.preFixCou++;\r\n            continue;\r\n        }\r\n        Trie newNode = new Trie();\r\n        curNode.subs.put(word.charAt(i), newNode);\r\n        curNode = newNode;\r\n        curNode.preFixCou++;\r\n    }\r\n    curNode.isEnd = true;\r\n    curNode.cou++;\r\n}\r\n\r\n /**\r\n *含有前缀\r\n * @param word 前缀串\r\n * */\r\npublic boolean startsWithPrefix(String word) {\r\n    Trie curNode = this;\r\n    for (int i = 0; i &lt; word.length(); i++) {\r\n        if (curNode.subs.containsKey(word.charAt(i))) {\r\n            curNode = curNode.subs.get(word.charAt(i));\r\n            continue;\r\n        }\r\n        return false;\r\n    }\r\n    if (curNode.preFixCou &gt; 0) return true;\r\n    return false;\r\n}\r\n\r\n /**\r\n *含有含有该敏感词\r\n * @param word 敏感词串\r\n * */\r\npublic boolean search(String word) {\r\n    Trie curNode = this;\r\n    for (int i = 0; i &lt; word.length(); i++) {\r\n        if (curNode.subs.containsKey(word.charAt(i))) {\r\n            curNode = curNode.subs.get(word.charAt(i));\r\n            continue;\r\n        }\r\n        return false;\r\n    }\r\n    if (curNode.isEnd) return true;\r\n    return false;\r\n}}\r\n</code></pre>\r\n<h3>测试结果</h3>\r\n<p><img src=\"https://images.jquan.ink/images/blog-image/blogarticle/sensiword1.png\" alt=\"answer\">\r\n<img src=\"https://images.jquan.ink/images/blog-image/blogarticle/sensiword2.png\" alt=\"answer1\"></p>\r\n','0.00','https://18066.oss-cn-hangzhou.aliyuncs.com/664e586ff31d4f32a68539ad75a00c7b.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/664e586ff31d4f32a68539ad75a00c7b.jpg',4,0,0,0,0,3,1,'2023-06-28 09:04:04','2023-06-28 09:08:50'),(1678315488757653506,1611899504066359297,'1',1,'1111','1111','## 1111','11.00','https://18066.oss-cn-hangzhou.aliyuncs.com/8d13c7207dae4123b3797c8ab9278b5d.jpg','https://18066.oss-cn-hangzhou.aliyuncs.com/8d13c7207dae4123b3797c8ab9278b5d.jpg',6,0,0,0,0,3,0,'2023-07-10 16:09:29','2023-07-10 16:09:29');

/*Table structure for table `posts_comment` */

DROP TABLE IF EXISTS `posts_comment`;

CREATE TABLE `posts_comment` (
  `id` bigint NOT NULL COMMENT '主键',
  `parent_id` bigint DEFAULT NULL COMMENT '上级评论主键',
  `parent_user_id` bigint DEFAULT NULL COMMENT '上级评论用户主键',
  `user_id` bigint NOT NULL COMMENT '用户主键',
  `posts_id` bigint NOT NULL COMMENT '帖子主键',
  `posts_user_id` bigint NOT NULL COMMENT '帖子所属用户主键',
  `content` varchar(1000) DEFAULT NULL COMMENT '评论内容',
  `like_num` int NOT NULL DEFAULT '0' COMMENT '点赞数量',
  `status` tinyint(1) DEFAULT '0' COMMENT '是否已读 0否  1是',
  `deleted` tinyint(1) DEFAULT '0' COMMENT '逻辑删除标记 是否已删除: 0否  1是',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='帖子评论';

/*Data for the table `posts_comment` */

insert  into `posts_comment`(`id`,`parent_id`,`parent_user_id`,`user_id`,`posts_id`,`posts_user_id`,`content`,`like_num`,`status`,`deleted`,`create_time`,`update_time`) values (1655500089872904193,NULL,NULL,1611899504066359297,1655132409734078466,1611899504066359297,'啊啊啊',0,0,0,'2023-05-08 17:09:14','2023-05-08 17:09:14'),(1658846058144448514,NULL,NULL,1611899504066359297,19,1611899504066359297,'是否士大夫',0,0,1,'2023-05-17 22:44:55','2023-05-17 22:45:23'),(1658846210146025473,NULL,NULL,1611899504066359297,19,1611899504066359297,'违法人为法人',0,0,1,'2023-05-17 22:45:31','2023-05-17 22:47:54'),(1658847434593386498,NULL,NULL,1611899504066359297,19,1611899504066359297,'撒大声地',0,0,1,'2023-05-17 22:50:23','2023-05-17 22:50:27'),(1658847467090853890,NULL,NULL,1611899504066359297,19,1611899504066359297,'撒大声地',0,0,1,'2023-05-17 22:50:31','2023-05-17 22:51:07'),(1658847951180644353,NULL,NULL,1611899504066359297,19,1611899504066359297,'撒大声地',0,0,1,'2023-05-17 22:52:26','2023-05-22 23:38:22'),(1660578287069556738,NULL,NULL,1611899504066359297,19,1611899504066359297,'asdasd',0,0,1,'2023-05-22 17:28:10','2023-05-22 23:38:25'),(1660622950195298305,NULL,NULL,1611899504066359297,19,1611899504066359297,'?????',0,0,1,'2023-05-22 20:25:39','2023-05-22 20:32:57'),(1660623095473405953,NULL,NULL,1611899504066359297,19,1611899504066359297,'阿达?',0,0,1,'2023-05-22 20:26:14','2023-05-22 20:32:55'),(1660658073221521410,NULL,NULL,1611899504066359297,19,1611899504066359297,'十大',0,0,1,'2023-05-22 22:45:13','2023-05-22 23:14:33'),(1660658693496168449,NULL,NULL,1611899504066359297,19,1611899504066359297,'微微?',0,0,1,'2023-05-22 22:47:41','2023-05-22 23:14:31'),(1660666128915030017,NULL,NULL,1611899504066359297,19,1611899504066359297,'阿萨德',0,0,1,'2023-05-22 23:17:13','2023-05-22 23:17:16'),(1660669020237520897,NULL,NULL,1611899504066359297,19,1611899504066359297,'前端',0,0,1,'2023-05-22 23:28:43','2023-05-22 23:38:12'),(1660669040986742786,NULL,NULL,1611899504066359297,19,1611899504066359297,'阿萨德',0,0,1,'2023-05-22 23:28:48','2023-05-22 23:38:09'),(1660669125359362050,NULL,NULL,1611899504066359297,19,1611899504066359297,'阿斯顿撒?',0,0,1,'2023-05-22 23:29:08','2023-06-12 15:34:57'),(1660671433778454530,NULL,NULL,1611899504066359297,19,1611899504066359297,'啊实打实?啊实打实',0,0,1,'2023-05-22 23:38:18','2023-06-12 15:34:54'),(1663524908216352769,NULL,NULL,1611899504066359297,19,1611899504066359297,'为富人微软',0,0,1,'2023-05-30 20:37:00','2023-05-30 20:50:10'),(1663529607376142337,NULL,NULL,1611899504066359297,19,1611899504066359297,'?',0,0,1,'2023-05-30 20:55:40','2023-05-30 20:55:44'),(1663529646668382209,NULL,NULL,1611899504066359297,19,1611899504066359297,'阿德撒旦?',0,0,1,'2023-05-30 20:55:49','2023-05-30 20:55:52'),(1664268435942633474,NULL,NULL,1611899504066359297,19,1611899504066359297,'?',0,0,1,'2023-06-01 21:51:30','2023-06-01 21:51:37'),(1666735675271147521,NULL,NULL,1611899504066359297,19,1611899504066359297,'?',0,0,1,'2023-06-08 17:15:26','2023-06-08 20:37:33'),(1666736183885033474,NULL,NULL,1611899504066359297,19,1611899504066359297,'?',0,0,1,'2023-06-08 17:17:27','2023-06-08 20:37:28'),(1668140537946845186,NULL,NULL,1611899504066359297,1665973929178566657,1664233745818914817,'呜呜呜呜呜呜无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无无凄凄切切群群群群群群群群群群群群群群群群群群群群群群群群群群群群群',0,0,1,'2023-06-12 14:17:51','2023-06-27 17:12:14'),(1668159905401520129,NULL,NULL,1611899504066359297,19,1611899504066359297,'?',0,0,0,'2023-06-12 15:34:49','2023-06-12 15:34:49'),(1668159988561985537,NULL,NULL,1611899504066359297,19,1611899504066359297,'??✋?',0,0,0,'2023-06-12 15:35:09','2023-06-12 15:35:09'),(1668534865571676162,NULL,NULL,1611899504066359297,1665973929178566657,1664233745818914817,'啊啊啊',0,0,0,'2023-06-13 16:24:47','2023-06-13 16:24:47'),(1669537338180608002,NULL,NULL,1611899504066359297,1665973929178566657,1664233745818914817,'?',0,0,1,'2023-06-16 10:48:15','2023-06-16 10:48:19'),(1671052024466231298,NULL,NULL,1611899504066359297,1670711613386141697,1664233745818914817,'啊啊啊啊',3,0,0,'2023-06-20 15:07:04','2023-06-20 15:07:04'),(1671052043634200578,NULL,NULL,1611899504066359297,1670711613386141697,1664233745818914817,'呜呜呜呜',2,0,0,'2023-06-20 15:07:09','2023-06-20 15:07:09'),(1671052094104260610,NULL,NULL,1611899504066359297,1670711613386141697,1664233745818914817,'额鹅鹅鹅?',1,0,0,'2023-06-20 15:07:21','2023-06-20 15:07:21'),(1671127976365858817,NULL,NULL,1671126780724977665,19,1611899504066359297,'打卡打卡！?',0,0,0,'2023-06-20 20:08:52','2023-06-20 20:08:52'),(1673244938919215105,NULL,NULL,1611899504066359297,19,1611899504066359297,'滚滚滚啊啊啊?',0,0,1,'2023-06-26 16:20:55','2023-06-26 16:20:59'),(1673245068971999234,NULL,NULL,1611899504066359297,19,1611899504066359297,'嘎嘎嘎嘎嘎嘎嘎嘎嘎?',0,0,1,'2023-06-26 16:21:26','2023-06-26 16:21:31'),(1673958201298534401,NULL,NULL,1611899504066359297,1673856840707903490,1611899504066359297,'大佬真棒?',0,0,0,'2023-06-28 15:35:10','2023-06-28 18:05:21'),(1674391883100467201,NULL,NULL,1611899504066359297,1670711613386141697,1664233745818914817,'?',8,0,0,'2023-06-29 20:18:28','2023-06-29 20:18:28'),(1676525322146799617,NULL,NULL,1611899504066359297,1673725222609498114,1671126780724977665,'啊啊啊',9,0,1,'2023-07-05 17:36:00','2023-07-13 16:43:06'),(1676847323524640770,NULL,NULL,1611899504066359297,1673725222609498114,1671126780724977665,'去瞧瞧?',7,0,1,'2023-07-06 14:55:31','2023-07-13 16:43:03'),(1676847336950607873,NULL,NULL,1611899504066359297,1673725222609498114,1671126780724977665,'111',6,0,1,'2023-07-06 14:55:34','2023-07-13 16:43:01'),(1676847351550980098,NULL,NULL,1611899504066359297,1673725222609498114,1671126780724977665,'222',5,0,1,'2023-07-06 14:55:38','2023-07-13 16:42:59'),(1676863175720452097,NULL,NULL,1611899504066359297,1673725222609498114,1671126780724977665,'啦啦啦?',4,0,1,'2023-07-06 15:58:30','2023-07-12 15:07:46'),(1679022219797225473,NULL,NULL,1611899504066359297,1673725222609498114,1671126780724977665,'驱蚊器?',0,0,1,'2023-07-12 14:57:47','2023-07-12 15:07:44'),(1679024789961838594,NULL,NULL,1611899504066359297,1673725222609498114,1671126780724977665,'hello?',1,0,0,'2023-07-12 15:07:59','2023-07-13 16:42:56'),(1679033764933574657,NULL,NULL,1611899504066359297,1673725222609498114,1671126780724977665,'?',1,0,0,'2023-07-12 15:43:39','2023-07-13 16:42:54');

/*Table structure for table `posts_like` */

DROP TABLE IF EXISTS `posts_like`;

CREATE TABLE `posts_like` (
  `id` bigint NOT NULL COMMENT '主键',
  `user_id` bigint NOT NULL COMMENT '用户主键',
  `posts_id` bigint NOT NULL COMMENT '帖子主键',
  `posts_user_id` bigint NOT NULL COMMENT '帖子所属用户主键',
  `status` tinyint(1) DEFAULT '0' COMMENT '是否已读 0否  1是',
  `deleted` tinyint(1) DEFAULT '0' COMMENT '逻辑删除标记 是否已删除: 0否  1是',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `user_id_posts_id` (`user_id`,`posts_id`) USING BTREE,
  KEY `user_id` (`user_id`) USING BTREE,
  KEY `posts_id` (`posts_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='帖子点赞';

/*Data for the table `posts_like` */

insert  into `posts_like`(`id`,`user_id`,`posts_id`,`posts_user_id`,`status`,`deleted`,`create_time`,`update_time`) values (1658766685940752385,1611899504066359297,19,1611899504066359297,0,0,'2023-05-17 17:29:31','2023-06-07 16:04:56'),(1658810868479098881,1611899504066359297,1656183523170459649,1611899504066359297,0,0,'2023-05-17 20:25:05','2023-06-07 15:43:47'),(1658859054874869762,1611899504066359297,25,1611899504066359297,0,0,'2023-05-17 23:36:33','2023-05-17 23:36:33'),(1658859058909790210,1611899504066359297,23,1611899504066359297,0,0,'2023-05-17 23:36:34','2023-05-17 23:36:34'),(1665974139854262273,1611899504066359297,1665973929178566657,1664233745818914817,0,0,'2023-06-06 14:49:22','2023-06-15 17:10:17'),(1668141701060898817,1611899504066359297,35,1611899504066359297,0,0,'2023-06-12 14:22:29','2023-06-12 14:22:29'),(1669270497562521602,1611899504066359297,1668861470932226050,1611899504066359297,0,0,'2023-06-15 17:07:55','2023-06-15 17:11:29'),(1671051620210823170,1611899504066359297,1670711613386141697,1664233745818914817,0,1,'2023-06-20 15:05:28','2023-06-20 15:20:47'),(1671127880001724417,1671126780724977665,19,1611899504066359297,0,0,'2023-06-20 20:08:29','2023-06-20 20:08:29'),(1673249383342145538,1611899504066359297,11,1611899504066359297,0,0,'2023-06-26 16:38:35','2023-06-26 16:38:35'),(1673620180862816257,1611899504066359297,1670823166051713026,1611899504066359297,0,0,'2023-06-27 17:12:00','2023-06-28 15:34:48'),(1673629444494905345,1611899504066359297,1665974447447740417,1664233745818914817,0,0,'2023-06-27 17:48:49','2023-06-27 17:48:49'),(1673996028715585537,1611899504066359297,1673856840707903490,1611899504066359297,0,0,'2023-06-28 18:05:29','2023-06-29 20:20:54'),(1676418541420662785,1611899504066359297,1673725222609498114,1671126780724977665,0,0,'2023-07-05 10:31:41','2023-07-10 19:02:42');

/*Table structure for table `user_info` */

DROP TABLE IF EXISTS `user_info`;

CREATE TABLE `user_info` (
  `id` bigint NOT NULL COMMENT '主键',
  `nickname` varchar(10) NOT NULL COMMENT '用户名称',
  `email` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '邮箱',
  `password` varchar(255) NOT NULL COMMENT '登录密码 加密',
  `original_password` varchar(255) NOT NULL COMMENT '登录密码 明文密码',
  `avatar` varchar(225) DEFAULT NULL COMMENT '头像',
  `gender` tinyint(1) DEFAULT '0' COMMENT '性别 0保密 1男 2女',
  `status` tinyint(1) DEFAULT '0' COMMENT '是否禁用 0否 1是',
  `hobby` varchar(225) DEFAULT NULL COMMENT '爱好',
  `remark` varchar(225) DEFAULT NULL COMMENT '备注',
  `role` tinyint(1) DEFAULT '0' COMMENT '身份 0游客 1学生 2管理',
  `deleted` tinyint(1) DEFAULT '0' COMMENT '逻辑删除标记 是否已删除: 0否  1是',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`,`email`),
  UNIQUE KEY `phone` (`email`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='用户信息';

/*Data for the table `user_info` */

insert  into `user_info`(`id`,`nickname`,`email`,`password`,`original_password`,`avatar`,`gender`,`status`,`hobby`,`remark`,`role`,`deleted`,`create_time`,`update_time`) values (1611899504066359297,'L.','1803466516@qq.com','$2a$10$lKVrw29/0CiEOihR9hAVFO2Y1uepS0ZPsHfSpd504cqQ6EU2xu5o2','xyl010203','/image/d600654877ea4c789b4f6fd23d23826f.png',1,0,'唱跳rap打篮球','我是练习两年半的练习生',1,0,'2023-01-08 09:36:04','2023-01-08 09:36:04'),(1613844709376036866,'菜鸟学霸','1803466519@qq.com','$2a$10$cfzHXhTKGzx3wfkJokFxyuRXNO.eeqeqP8JWwFcxy0x8JUx9nk6U2','123456','/image/0f46412890da4564adbde4ac00c0d529.jpg',0,0,'按时发发发','按时发发发发',1,0,'2023-01-13 18:25:37','2023-01-13 18:25:37'),(1654848148980322306,'菜鸟学霸','1594965054@qq.com','$2a$10$uXLNCwAGb.5DYyTJmu1c4ut0S93GpWwPurbSazGgY5xokZVafzxg2','111111','/image/default-avatar.png',0,0,NULL,'我是练习两年半的练习生',1,0,'2023-05-06 21:58:39','2023-07-12 10:16:53'),(1664233745818914817,'菜鸟学霸','2753372385@qq.com','$2a$10$foUsPfhmdiQRQVu3GFm5Au.0i.F5PHw4tjzuP9QQEkTCe2.ZUuhe2','xyl010203','/image/a26e024a07634cadaa6f9dbd3bff2130.jpg',0,0,'','我是练习两年半的练习生',1,0,'2023-06-01 19:33:40','2023-07-12 10:16:54'),(1664238241575931905,'菜鸟学霸','2803466516@qq.com','$2a$10$7WvBU/Sy.ldyAtIfQwpji.2Wboc0yt/q/HILfngm1JIBN9QVqd6xm','','/image/default-avatar.png',0,0,NULL,'我是练习两年半的练习生',1,0,'2023-06-01 19:51:32','2023-07-12 10:16:55'),(1664238953160531969,'菜鸟学霸','2803466511@qq.com','$2a$10$fqDtcDSTx780.zF8YsHF9OmFeOPa.dUO9ZysboQ28BYpSYyjF09xW','','/image/default-avatar.png',0,0,NULL,'我是练习两年半的练习生',1,0,'2023-06-01 19:54:21','2023-07-12 10:16:56'),(1671126780724977665,'菜鸟学霸','2030155342@qq.com','$2a$10$7WTBwQS/MowRmHCCDggEMeOgdKusEI4F97wbZPlnovx5Jy/eRIIHS','xyl010203','/image/default-avatar.png',0,0,NULL,'我是练习两年半的练习生',0,0,'2023-06-20 20:04:07','2023-07-12 10:16:59');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
